{"version":3,"sources":["../../src/stores/CallStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAI,UAAU,KAAV;AACJ,IAAI,cAAc,KAAd;AACJ,IAAI,WAAW,KAAX;AACJ,IAAI,YAAJ;IAAS,iBAAT;IAAmB,cAAnB;IAA0B,eAA1B;;IAEM;;;AACJ,WADI,SACJ,CAAY,UAAZ,EAAwB;0BADpB,WACoB;;4CACtB,kBAAM,UAAN,GADsB;GAAxB;;AADI,sBAKJ,2BAAS;AACP,WAAO,OAAP,CADO;;;AALL,sBASJ,mCAAa;AACX,WAAO,WAAP,CADW;;;AATT,sBAaJ,6BAAU;AACR,WAAO,QAAP,CADQ;;;AAbN,sBAiBJ,yBAAQ;AACN,WAAO,GAAP,CADM;;;AAjBJ,sBAqBJ,mCAAa;AACX,WAAO,QAAP,CADW;;;AArBT,sBAyBJ,6BAAU;AACR,WAAO,KAAP,CADQ;;;AAzBN,sBA6BJ,+BAAW;AACT,WAAO,MAAP,CADS;;;AA7BP,sBAiCJ,qCAAa,QAAQ;AACnB,YAAO,OAAO,IAAP;AACL,WAAK,+BAAY,eAAZ;AACH,kBAAU,IAAV,CADF;AAEE,cAAO,OAAO,EAAP,CAFT;AAGE,aAAK,YAAL,GAHF;AAIE,cAJF;AADF,WAMO,+BAAY,eAAZ;AACH,kBAAU,KAAV,CADF;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;AANF,WAUO,+BAAY,YAAZ;2BACmD,OAAO,IAAP,CADxD;YACU,+BADV;YACmB,yBADnB;YACyB,2BADzB;YACgC,qCADhC;YAC4C,+BAD5C;;AAEE,sBAAc,UAAd,CAFF;AAGE,mBAAW,OAAX,CAHF;AAIE,gBAAQ,IAAR,CAJF;AAKE,iBAAS,KAAT;;AALF,YAOE,CAAK,YAAL,GAPF;AAQE,cARF;AAVF,WAmBO,+BAAY,gBAAZ;AACH,mBAAW,CAAC,QAAD,CADb;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;AAnBF,WAuBO,+BAAY,IAAZ;;AAEH,cAFF;AAvBF;KADmB;;;SAjCjB;;;kBAiES,IAAI,SAAJ","file":"CallStore.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nlet _isOpen = false;\nlet _isOutgoing = false;\nlet _isMuted = false;\nlet _id, _members, _peer, _state;\n\nclass CallStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  isOpen() {\n    return _isOpen;\n  }\n\n  isOutgoing() {\n    return _isOutgoing\n  }\n\n  isMuted() {\n    return _isMuted;\n  }\n\n  getId() {\n    return _id;\n  }\n\n  getMembers() {\n    return _members;\n  }\n\n  getPeer() {\n    return _peer;\n  }\n\n  getState() {\n    return _state;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.CALL_MODAL_OPEN:\n        _isOpen = true;\n        _id  = action.id;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL_MODAL_HIDE:\n        _isOpen = false;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL_CHANGED:\n        const { members, peer, state, isOutgoing, isMuted } = action.call;\n        _isOutgoing = isOutgoing;\n        _members = members;\n        _peer = peer;\n        _state = state;\n        // _isMuted = isMuted;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL_MUTE_TOGGLE:\n        _isMuted = !_isMuted;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL:\n        // console.debug('ActionTypes.CALL', action);\n        break;\n      default:\n    }\n  };\n}\n\nexport default new CallStore(Dispatcher);\n"]}