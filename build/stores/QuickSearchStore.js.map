{"version":3,"sources":["../../src/stores/QuickSearchStore.js"],"names":[],"mappings":";;;;AAIA;;AAEA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAI,UAAU,KAAV;IACA,QAAQ,EAAR;IACA,WAAW,EAAX;;IAEE;;;AACJ,WADI,gBACJ,CAAY,UAAZ,EAAwB;0BADpB,kBACoB;;4CACtB,kBAAM,UAAN,GADsB;GAAxB;;AADI,6BAKJ,2BAAS;AACP,WAAO,OAAP,CADO;;;AALL,6BASJ,mCAAa;AACX,WAAO,QAAP,CADW;;;AATT,6BAaJ,+CAAkB,OAAO;AACvB,QAAI,UAAU,EAAV,CADmB;;AAGvB,QAAI,UAAU,EAAV,EAAc;AAChB,gBAAU,KAAV,CADgB;KAAlB,MAEO;AACL,2BAAQ,KAAR,EAAe,UAAC,MAAD,EAAY;AACzB,YAAI,OAAO,QAAP,CAAgB,KAAhB,CAAsB,WAAtB,GAAoC,QAApC,CAA6C,MAAM,WAAN,EAA7C,CAAJ,EAAuE;AACrE,kBAAQ,IAAR,CAAa,MAAb,EADqE;SAAvE;OADa,CAAf,CADK;KAFP;;AAUA,eAAW,OAAX,CAbuB;AAcvB,SAAK,YAAL,GAduB;;;AAbrB,6BA8BJ,qCAAa,QAAQ;AACnB,YAAQ,OAAO,IAAP;AACN,WAAK,+BAAY,iBAAZ;AACH,kBAAU,IAAV,CADF;AAEE,aAAK,iBAAL,CAAuB,EAAvB,EAFF;AAGE,aAAK,YAAL,GAHF;AAIE,cAJF;;AADF,WAOO,+BAAY,iBAAZ;AACH,kBAAU,KAAV,CADF;AAEE,mBAAW,EAAX,CAFF;AAGE,aAAK,YAAL,GAHF;AAIE,cAJF;;AAPF,WAaO,+BAAY,oBAAZ;AACH,gBAAQ,OAAO,IAAP,CADV;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;;AAbF,WAkBO,+BAAY,YAAZ;AACH,aAAK,iBAAL,CAAuB,OAAO,KAAP,CAAvB,CADF;AAEE,cAFF;AAlBF,KADmB;;;SA9BjB;;;kBAwDS,IAAI,gBAAJ","file":"QuickSearchStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\n\nlet _isOpen = false,\n    _list = [],\n    _results = [];\n\nclass QuickSearchStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  isOpen() {\n    return _isOpen;\n  }\n\n  getResults() {\n    return _results;\n  }\n\n  handleSearchQuery(query) {\n    let results = [];\n\n    if (query === '') {\n      results = _list;\n    } else {\n      forEach(_list, (result) => {\n        if (result.peerInfo.title.toLowerCase().includes(query.toLowerCase())) {\n          results.push(result);\n        }\n      })\n    }\n\n    _results = results;\n    this.__emitChange();\n  }\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.QUICK_SEARCH_SHOW:\n        _isOpen = true;\n        this.handleSearchQuery('');\n        this.__emitChange();\n        break;\n\n      case ActionTypes.QUICK_SEARCH_HIDE:\n        _isOpen = false;\n        _results = [];\n        this.__emitChange();\n        break;\n\n      case ActionTypes.QUICK_SEARCH_CHANGED:\n        _list = action.list;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.QUICK_SEARCH:\n        this.handleSearchQuery(action.query);\n        break;\n    }\n  };\n}\n\nexport default new QuickSearchStore(Dispatcher);\n"]}