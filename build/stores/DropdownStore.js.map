{"version":3,"sources":["../../src/stores/DropdownStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM;;;AACJ,WADI,aACJ,CAAY,UAAZ,EAAwB;0BADpB,eACoB;;iDACtB,kBAAM,UAAN,GADsB;;AAGtB,UAAK,sBAAL,GAA8B,KAA9B,CAHsB;AAItB,UAAK,oBAAL,GAA4B,KAA5B,CAJsB;AAKtB,UAAK,WAAL,GAAmB,EAAnB,CALsB;AAMtB,UAAK,WAAL,GAAmB,EAAnB,CANsB;AAOtB,UAAK,QAAL,GAAgB,EAAhB,CAPsB;AAQtB,UAAK,KAAL,GAAa,EAAb,CARsB;;GAAxB;;AADI,0BAYJ,uDAAsB,KAAK;AACzB,QAAI,QAAQ,KAAK,QAAL,CAAc,GAAd,EAAmB;AAC7B,aAAO,KAAK,sBAAL,CADsB;KAA/B,MAEO;AACL,aAAO,KAAP,CADK;KAFP;;;AAbE,0BAoBJ,qDAAsB;AACpB,WAAO,KAAK,oBAAL,CADa;;;AApBlB,0BAwBJ,mCAAa;AACX,WAAO,KAAK,QAAL,CADI;;;AAxBT,0BA4BJ,yCAAgB;AACd,WAAO,KAAK,WAAL,CADO;;;AA5BZ,0BAgCJ,yCAAgB;AACd,WAAO,KAAK,WAAL,CADO;;;AAhCZ,0BAoCJ,6BAAU;AACR,WAAO,KAAK,KAAL,CADC;;;AApCN,0BAwCJ,qCAAa,QAAQ;AACnB,YAAO,OAAO,IAAP;AACL,WAAK,+BAAY,qBAAZ;AACH,aAAK,sBAAL,GAA8B,IAA9B,CADF;AAEE,aAAK,oBAAL,GAA4B,KAA5B,CAFF;AAGE,aAAK,QAAL,GAAgB,OAAO,OAAP,CAHlB;AAIE,aAAK,WAAL,GAAmB,OAAO,UAAP,CAJrB;AAKE,aAAK,YAAL,GALF;AAME,cANF;AADF,WAQO,+BAAY,qBAAZ;AACH,aAAK,sBAAL,GAA8B,KAA9B,CADF;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;;AARF,WAaO,+BAAY,wBAAZ;AACH,aAAK,oBAAL,GAA4B,IAA5B,CADF;AAEE,aAAK,sBAAL,GAA8B,KAA9B,CAFF;AAGE,aAAK,WAAL,GAAmB,OAAO,UAAP,CAHrB;AAIE,aAAK,KAAL,GAAa,OAAO,IAAP,CAJf;AAKE,aAAK,YAAL,GALF;AAME,cANF;AAbF,WAoBO,+BAAY,wBAAZ;AACH,aAAK,oBAAL,GAA4B,KAA5B,CADF;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;AApBF;KADmB;;;SAxCjB;;;kBAsES,IAAI,aAAJ","file":"DropdownStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\n\nclass DropdownStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n\n    this._isMessageDropdownOpen = false;\n    this._isRecentContextOpen = false;\n    this._targetRect = {};\n    this._contextPos = {}\n    this._message = {};\n    this._peer = {};\n  }\n\n  isMessageDropdownOpen(rid) {\n    if (rid === this._message.rid) {\n      return this._isMessageDropdownOpen;\n    } else {\n      return false;\n    }\n  }\n\n  isRecentContextOpen() {\n    return this._isRecentContextOpen;\n  }\n\n  getMessage() {\n    return this._message;\n  }\n\n  getTargetRect() {\n    return this._targetRect;\n  }\n\n  getContextPos() {\n    return this._contextPos;\n  }\n\n  getPeer() {\n    return this._peer;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.MESSAGE_DROPDOWN_SHOW:\n        this._isMessageDropdownOpen = true;\n        this._isRecentContextOpen = false;\n        this._message = action.message;\n        this._targetRect = action.targetRect;\n        this.__emitChange();\n        break;\n      case ActionTypes.MESSAGE_DROPDOWN_HIDE:\n        this._isMessageDropdownOpen = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.RECENT_CONTEXT_MENU_SHOW:\n        this._isRecentContextOpen = true;\n        this._isMessageDropdownOpen = false;\n        this._contextPos = action.contextPos;\n        this._peer = action.peer;\n        this.__emitChange();\n        break;\n      case ActionTypes.RECENT_CONTEXT_MENU_HIDE:\n        this._isRecentContextOpen = false;\n        this.__emitChange();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new DropdownStore(Dispatcher);\n"]}