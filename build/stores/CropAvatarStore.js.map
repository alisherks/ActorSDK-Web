{"version":3,"sources":["../../src/stores/CropAvatarStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAI,UAAU,KAAV;IACA,iBAAiB,IAAjB;;IAEE;;;AACJ,WADI,eACJ,CAAY,UAAZ,EAAwB;0BADpB,iBACoB;;4CACtB,kBAAM,UAAN,GADsB;GAAxB;;AADI,4BAKJ,2BAAS;AACP,WAAO,OAAP,CADO;;;AALL,4BASJ,+CAAmB;AACjB,WAAO,cAAP,CADiB;;;AATf,4BAaJ,qCAAa,QAAQ;AACnB,YAAO,OAAO,IAAP;AACL,WAAK,+BAAY,sBAAZ;AACH,kBAAU,IAAV,CADF;AAEE,yBAAiB,OAAO,MAAP,CAFnB;AAGE,aAAK,YAAL,GAHF;AAIE,cAJF;AADF,WAMO,+BAAY,sBAAZ;AACH,kBAAU,KAAV,CADF;AAEE,yBAAiB,IAAjB,CAFF;AAGE,aAAK,YAAL,GAHF;AAIE,cAJF;AANF;KADmB;;;SAbjB;;;kBA8BS,IAAI,eAAJ","file":"CropAvatarStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nlet _isOpen = false,\n    _pictureSource = null;\n\nclass CropAvatarStore extends Store {\n  constructor(Dispatcher) {\n    super(Dispatcher);\n  }\n\n  isOpen() {\n    return _isOpen;\n  }\n\n  getPictureSource() {\n    return _pictureSource;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.CROP_AVATAR_MODAL_SHOW:\n        _isOpen = true;\n        _pictureSource = action.source;\n        this.__emitChange();\n        break;\n      case ActionTypes.CROP_AVATAR_MODAL_HIDE:\n        _isOpen = false;\n        _pictureSource = null;\n        this.__emitChange();\n        break;\n      default:\n    }\n  };\n}\n\nexport default new CropAvatarStore(Dispatcher);\n"]}