{"version":3,"sources":["../../src/stores/LoginStore.js"],"names":[],"mappings":"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","file":"LoginStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AuthSteps } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\n\nimport { getIntlData } from '../l18n';\n\nlet step = AuthSteps.LOGIN_WAIT,\n    errors = {\n      login: null,\n      code: null,\n      signup: null\n    },\n    login = '',\n    code = '',\n    name = '',\n    isCodeRequested = false,\n    isCodeSended = false,\n    isSignupStarted = false,\n    myUid = null;\n\nclass LoginStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n\n    // TODO: do not use intlData here. save error codes and send them to ui.\n    this.intl = getIntlData();\n  }\n\n  getStep = () => step;\n  getErrors = () => errors;\n  getLogin = () => login;\n  getCode = () => code;\n  getName = () => name;\n  isCodeRequested = () => isCodeRequested;\n  isCodeSended = () => isCodeSended;\n  isSignupStarted = () => isSignupStarted;\n  getMyId = () => myUid;\n  isLoggedIn = () => ActorClient.isLoggedIn();\n\n  resetStore = () => {\n    step = AuthSteps.LOGIN_WAIT;\n    errors = {\n      login: null,\n      code: null,\n      signup: null\n    };\n    login = code = name = '';\n    isCodeRequested = isCodeSended = isSignupStarted = false;\n    myUid = null;\n  };\n\n  __onDispatch(action) {\n    switch (action.type) {\n\n      case ActionTypes.AUTH_CHANGE_LOGIN:\n        login = action.login;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CHANGE_CODE:\n        code = action.code;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CHANGE_NAME:\n        name = action.name;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_CODE_REQUEST:\n        isCodeRequested = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_REQUEST_SUCCESS:\n        step = AuthSteps.CODE_WAIT;\n        errors.login = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_REQUEST_FAILURE:\n        switch (action.error) {\n          case 'PHONE_NUMBER_INVALID':\n            errors.login = this.intl.messages['login.errors.numberInvalid'];\n            break;\n          case 'CODE_WAIT':\n            errors.login = this.intl.messages['login.errors.codeWait'];\n            break;\n          default:\n            errors.login = action.error;\n        }\n        isCodeRequested = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_CODE_SEND:\n        isCodeSended = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_SEND_SUCCESS:\n        errors.code = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_SEND_FAILURE:\n        switch (action.error) {\n          case 'PHONE_CODE_INVALID':\n          case 'EMAIL_CODE_INVALID':\n            errors.code = this.intl.messages['login.errors.codeInvalid'];\n            break;\n          case 'PHONE_CODE_EXPIRED':\n            errors.code = this.intl.messages['login.errors.codeExpired'];\n            break;\n          default:\n            errors.code = action.error;\n        }\n        isCodeSended = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SIGNUP_START:\n        step = AuthSteps.NAME_WAIT;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SIGNUP:\n        isSignupStarted = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SIGNUP_SUCCESS:\n        errors.signup = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SIGNUP_FAILURE:\n        switch (action.error) {\n          case 'NAME_INVALID':\n            errors.signup = this.intl.messages['login.errors.nameInvalid'];\n            break;\n          default:\n            errors.signup = action.error;\n        }\n        isSignupStarted = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_RESTART:\n        this.resetStore();\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SET_LOGGED_IN:\n        myUid = ActorClient.getUid();\n        const user = ActorClient.getUser(myUid);\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SET_LOGGED_OUT:\n        localStorage.clear();\n        location.reload();\n        break;\n      default:\n    }\n  };\n}\n\nexport default new LoginStore(Dispatcher);\n"]}