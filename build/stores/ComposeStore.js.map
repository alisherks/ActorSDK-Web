{"version":3,"sources":["../../src/stores/ComposeStore.js"],"names":[],"mappings":"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","file":"ComposeStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport ActorClient from '../utils/ActorClient';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\n\nimport DraftStore from './DraftStore';\n\nconst getQuery = (text, position) => {\n  const run = (runText, query) => {\n    if (runText.length === 0) {\n      return null;\n    } else {\n      const lastChar = runText.charAt(runText.length - 1);\n      if (lastChar === '@') {\n        const charBeforeAt = runText.charAt(runText.length - 2);\n        if (charBeforeAt.trim() === '') {\n          const text = (query || '');\n          const atStart = text.length + 1 === position;\n\n          return {\n            text: text,\n            atStart: atStart\n          };\n        } else {\n          return null;\n        }\n      } else if (lastChar.trim() === '') {\n        return null;\n      } else {\n        return run(runText.substring(0, runText.length - 1), lastChar + (query || ''));\n      }\n    }\n  };\n\n  const runText = text.substring(0, position);\n  return run(runText, null);\n};\n\nlet text = '';\nlet mentions = null;\nlet _isAutoFocusEnabled = true;\n\nclass ComposeStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  getMentions() {\n    return mentions;\n  }\n\n  getText() {\n    return text;\n  }\n\n  isAutoFocusEnabled() {\n    return _isAutoFocusEnabled;\n  }\n\n  onTyping = (action) => {\n    text = action.text;\n    const query = getQuery(text, action.caretPosition);\n\n    if (action.peer.type === PeerTypes.GROUP && query !== null) {\n      mentions = ActorClient.findMentions(action.peer.id, query.text);\n    } else {\n      mentions = null;\n    }\n\n    this.__emitChange();\n  };\n\n  onMentionInsert = (action) => {\n    const query = getQuery(action.text, action.caretPosition);\n    const mentionEnding = query.atStart ? ': ' : ' ';\n\n    text = action.text.substring(0, action.caretPosition - query.text.length - 1) +\n      action.mention.mentionText +\n      mentionEnding +\n      action.text.substring(action.caretPosition, action.text.length);\n\n    mentions = null;\n\n    this.__emitChange();\n  };\n\n  onMentionClose = () => {\n    mentions = null;\n    this.__emitChange();\n  };\n\n  onComposeClean = () => {\n    text = '';\n    mentions = null;\n    this.__emitChange();\n  };\n\n  onDraftLoad = () => {\n    text = DraftStore.getDraft();\n    this.__emitChange();\n  };\n\n  onEmojiInsert = (action) => {\n    const emojiText = `${action.emoji} `;\n\n    text = action.text.substring(0, action.caretPosition) +\n      emojiText +\n      action.text.substring(action.caretPosition, action.text.length);\n\n    this.__emitChange();\n  };\n\n  onComposePaste = (newText) => {\n    text = newText;\n    this.__emitChange();\n  };\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.COMPOSE_TYPING:\n        this.onTyping(action);\n        break;\n      case ActionTypes.COMPOSE_MENTION_INSERT:\n        this.onMentionInsert(action);\n        break;\n      case ActionTypes.COMPOSE_MENTION_CLOSE:\n        this.onMentionClose();\n        break;\n      case ActionTypes.COMPOSE_CLEAN:\n        this.onComposeClean();\n        break;\n      case ActionTypes.DRAFT_LOAD:\n        this.onDraftLoad();\n        break;\n      case ActionTypes.EMOJI_INSERT:\n        this.onEmojiInsert(action);\n        break;\n      case ActionTypes.COMPOSE_PASTE:\n        this.onComposePaste(action.text);\n        break;\n\n      case ActionTypes.COMPOSE_TOGGLE_AUTO_FOCUS:\n        _isAutoFocusEnabled = action.isEnable;\n        this.__emitChange();\n        break;\n\n      default:\n    }\n  };\n}\n\nexport default new ComposeStore(Dispatcher);\n"]}