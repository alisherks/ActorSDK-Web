{"version":3,"sources":["../../src/stores/GroupStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAI,oBAAoB,IAApB;;IAEE;;;AACJ,WADI,UACJ,CAAY,UAAZ,EAAwB;0BADpB,YACoB;;4CACtB,kBAAM,UAAN,GADsB;GAAxB;;;;;;;;;;AADI,uBAWJ,6BAAS,KAAK;AACZ,WAAO,sBAAY,QAAZ,CAAqB,GAArB,CAAP,CADY;;;;;;;;;;AAXV,uBAoBJ,+BAAW;AACT,WAAO,iBAAP,CADS;;;AApBP,uBAwBJ,qCAAa,QAAQ;AACnB,YAAQ,OAAO,IAAP;;AAEN,WAAK,+BAAY,eAAZ;AACH,aAAK,YAAL,GADF;AAEE,cAFF;AAFF,WAKO,+BAAY,uBAAZ;AACH,4BAAoB,OAAO,QAAP,CADtB;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;AALF,WASO,+BAAY,qBAAZ;AACH,4BAAoB,IAApB,CADF;AAEE,aAAK,YAAL,GAFF;AAGE,cAHF;;AATF,WAcO,+BAAY,WAAZ,CAdP;AAeE,WAAK,+BAAY,mBAAZ,CAfP;AAgBE,WAAK,+BAAY,iBAAZ,CAhBP;;AAkBE,WAAK,+BAAY,WAAZ,CAlBP;AAmBE,WAAK,+BAAY,mBAAZ,CAnBP;AAoBE,WAAK,+BAAY,iBAAZ,CApBP;;AAsBE,WAAK,+BAAY,YAAZ,CAtBP;AAuBE,WAAK,+BAAY,oBAAZ,CAvBP;AAwBE,WAAK,+BAAY,kBAAZ;AACH,aAAK,YAAL,GADF;AAEE,cAFF;AAxBF,KADmB;;;SAxBjB;;;kBAwDS,IAAI,UAAJ","file":"GroupStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet _integrationToken = null;\n\nclass GroupStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  /**\n   * Get group information\n   *\n   * @param gid {number} Group id\n   * @returns {object} Group information\n   */\n  getGroup(gid) {\n    return ActorClient.getGroup(gid);\n  }\n\n  /**\n   * Get group integration token\n   *\n   * @returns {string|null}\n   */\n  getToken() {\n    return _integrationToken;\n  }\n\n  __onDispatch(action) {\n    switch (action.type) {\n\n      case ActionTypes.GROUP_GET_TOKEN:\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_GET_TOKEN_SUCCESS:\n        _integrationToken = action.response;\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_GET_TOKEN_ERROR:\n        _integrationToken = null;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_CLEAR:\n      case ActionTypes.GROUP_CLEAR_SUCCESS:\n      case ActionTypes.GROUP_CLEAR_ERROR:\n\n      case ActionTypes.GROUP_LEAVE:\n      case ActionTypes.GROUP_LEAVE_SUCCESS:\n      case ActionTypes.GROUP_LEAVE_ERROR:\n\n      case ActionTypes.GROUP_DELETE:\n      case ActionTypes.GROUP_DELETE_SUCCESS:\n      case ActionTypes.GROUP_DELETE_ERROR:\n        this.__emitChange();\n        break;\n    }\n  };\n}\n\nexport default new GroupStore(Dispatcher);\n"]}