{"version":3,"sources":["../../src/actions/EditGroupActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACb,sBAAK,KAAK;AACR,QAAM,QAAQ,sBAAY,QAAZ,CAAqB,GAArB,CAAR,CADE;AAER,0BAAY,SAAZ,CAAsB,GAAtB,EAA2B,KAAK,oBAAL,CAA3B,CAFQ;AAGR,sCAAS,+BAAY,qBAAZ,EAAmC,EAAE,YAAF,EAA5C,EAHQ;AAIR,oCAAsB,eAAtB,CAAsC,KAAtC,EAJQ;GADG;AAQb,wBAAQ;AACN,QAAM,QAAQ,yBAAe,QAAf,EAAR,CADA;AAEN,0BAAY,WAAZ,CAAwB,MAAM,EAAN,EAAU,KAAK,oBAAL,CAAlC,CAFM;AAGN,sCAAS,+BAAY,qBAAZ,CAAT,CAHM;AAIN,oCAAsB,eAAtB,CAAsC,IAAtC,EAJM;GARK;AAeb,sDAAqB,OAAO;AAC1B,sCAAS,+BAAY,kBAAZ,EAAgC,EAAE,YAAF,EAAzC,EAD0B;GAff;AAmBb,0CAAe,KAAK,OAAO;AACzB,QAAI,UAAU,yBAAe,QAAf,EAAV,EAAqC;AACvC,6CAAc,sBAAY,cAAZ,CAA2B,GAA3B,EAAgC,KAAhC,CAAd,EAAsD;AACpD,iBAAS,+BAAY,gBAAZ;AACT,iBAAS,+BAAY,wBAAZ;AACT,iBAAS,+BAAY,sBAAZ;OAHX,EAIG,EAAE,QAAF,EAAO,YAAP,EAJH,EADuC;KAAzC;GApBW;AA6Bb,gDAAkB,KAAK,QAAQ;AAC7B,0BAAY,iBAAZ,CAA8B,GAA9B,EAAmC,MAAnC,EAD6B;GA7BlB;AAiCb,0CAAe,KAAK,OAAO;AACzB,YAAQ,UAAU,EAAV,GAAe,IAAf,GAAsB,KAAtB,CADiB;AAEzB,QAAI,UAAU,yBAAe,QAAf,EAAV,EAAqC;AACvC,6CAAc,sBAAY,cAAZ,CAA2B,GAA3B,EAAgC,KAAhC,CAAd,EAAsD;AACpD,iBAAS,+BAAY,gBAAZ;AACT,iBAAS,+BAAY,wBAAZ;AACT,iBAAS,+BAAY,sBAAZ;OAHX,EAIG,EAAE,QAAF,EAAO,YAAP,EAJH,EADuC;KAAzC;GAnCW;AA4Cb,gDAAkB,KAAK;AACrB,0BAAY,iBAAZ,CAA8B,GAA9B,EADqB;GA5CV","file":"EditGroupActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport EditGroupStore from '../stores/EditGroupStore'\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nexport default {\n  show(gid) {\n    const group = ActorClient.getGroup(gid);\n    ActorClient.bindGroup(gid, this.onCurrentGroupChange);\n    dispatch(ActionTypes.GROUP_EDIT_MODAL_SHOW, { group });\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide()  {\n    const group = EditGroupStore.getGroup();\n    ActorClient.unbindGroup(group.id, this.onCurrentGroupChange);\n    dispatch(ActionTypes.GROUP_EDIT_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  onCurrentGroupChange(group) {\n    dispatch(ActionTypes.GROUP_INFO_CHANGED, { group })\n  },\n\n  editGroupTitle(gid, title) {\n    if (title !== EditGroupStore.getTitle()) {\n      dispatchAsync(ActorClient.editGroupTitle(gid, title), {\n        request: ActionTypes.GROUP_EDIT_TITLE,\n        success: ActionTypes.GROUP_EDIT_TITLE_SUCCESS,\n        failure: ActionTypes.GROUP_EDIT_TITLE_ERROR\n      }, { gid, title });\n    }\n  },\n\n  changeGroupAvatar(gid, avatar) {\n    ActorClient.changeGroupAvatar(gid, avatar)\n  },\n\n  editGroupAbout(gid, about) {\n    about = about === '' ? null : about;\n    if (about !== EditGroupStore.getAbout()) {\n      dispatchAsync(ActorClient.editGroupAbout(gid, about), {\n        request: ActionTypes.GROUP_EDIT_ABOUT,\n        success: ActionTypes.GROUP_EDIT_ABOUT_SUCCESS,\n        failure: ActionTypes.GROUP_EDIT_ABOUT_ERROR\n      }, { gid, about });\n    }\n  },\n\n  removeGroupAvatar(gid) {\n    ActorClient.removeGroupAvatar(gid)\n  }\n};\n"]}