{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AAEA;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;kBAEe;AACb,sBAAK,aAAa;AAChB,sCAAS,+BAAY,qBAAZ,EAAmC,EAAE,wBAAF,EAA5C,EADgB;AAEhB,oCAAsB,eAAtB,CAAsC,KAAtC,EAFgB;GADL;AAMb,wBAAO;AACL,sCAAS,+BAAY,qBAAZ,CAAT,CADK;AAEL,oCAAsB,eAAtB,CAAsC,IAAtC,EAFK;GANM;AAWb,8CAAiB,OAAO;AACtB,sCAAS,+BAAY,iBAAZ,EAA+B,EAAE,YAAF,EAAxC,EADsB;GAXX;AAeb,8CAAiB,eAAe;AAC9B,sCAAS,+BAAY,iBAAZ,EAA+B,EAAE,4BAAF,EAAxC,EAD8B;GAfnB;AAmBb,gDAAmB;AACjB,sCAAS,+BAAY,iBAAZ,CAAT,CADiB;GAnBN;AAuBb,4CAAiB;AACf,QAAM,cAAc,sBAAY,cAAZ,EAAd,CADS;AAEf,QAAM,aAAa,0BAAgB,aAAhB,EAAb,CAFS;;AAIf,QAAI,WAAW,OAAX,IAAsB,WAAW,aAAX,EAA0B;AAClD,sCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAAX,CAApD,CADkD;KAApD,MAEO;AACL,sCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAAX,CAAnD,CADK;KAFP;;AAMA,sCAAS,+BAAY,eAAZ,CAAT,CAVe;AAWf,oCAAsB,eAAtB,CAAsC,IAAtC,EAXe;GAvBJ;;;AAqCb,WAAS,iBAAC,WAAD,EAAiB;AACxB,QAAM,cAAc,sBAAY,cAAZ,EAAd,CADkB;;AAGxB,yBAAQ,WAAR,EAAqB,UAAC,UAAD,EAAgB;AACnC,UAAI,WAAW,OAAX,IAAsB,WAAW,aAAX,EAA0B;AAClD,wCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAAX,CAApD,CADkD;OAApD,MAEO;AACL,wCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAAX,CAAnD,CADK;OAFP;KADmB,CAArB,CAHwB;;AAWxB,sCAAS,+BAAY,mBAAZ,EAAiC,EAAE,wBAAF,EAA1C,EAXwB;AAYxB,oCAAsB,eAAtB,CAAsC,IAAtC,EAZwB;GAAjB","file":"AttachmentsActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport AttachmentStore from '../stores/AttachmentStore';\n\nexport default {\n  show(attachments) {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments });\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  selectAttachment(index) {\n    dispatch(ActionTypes.ATTACHMENT_SELECT, { index })\n  },\n\n  changeAttachment(sendAsPicture) {\n    dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture });\n  },\n\n  deleteAttachment() {\n    dispatch(ActionTypes.ATTACHMENT_DELETE);\n  },\n\n  sendAttachment() {\n    const currentPeer = DialogStore.getCurrentPeer();\n    const attachment = AttachmentStore.getAttachment();\n\n    if (attachment.isImage && attachment.sendAsPicture) {\n      MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n    } else {\n      MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n    }\n\n    dispatch(ActionTypes.ATTACHMENT_SEND);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  sendAll: (attachments) => {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    forEach(attachments, (attachment) => {\n      if (attachment.isImage && attachment.sendAsPicture) {\n        MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n      } else {\n        MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n      }\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n}\n"]}