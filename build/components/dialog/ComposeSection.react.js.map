{"version":3,"sources":["../../../src/components/dialog/ComposeSection.react.js"],"names":[],"mappings":"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","file":"ComposeSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { assign, forEach } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\n\nimport ActorClient from '../../utils/ActorClient';\nimport Inputs from '../../utils/Inputs';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\nimport ComposeActionCreators from '../../actions/ComposeActionCreators';\nimport AttachmentsActionCreators from '../../actions/AttachmentsActionCreators';\nimport EmojiActionCreators from '../../actions/EmojiActionCreators';\n\nimport GroupStore from '../../stores/GroupStore';\nimport PreferencesStore from '../../stores/PreferencesStore';\nimport ComposeStore from '../../stores/ComposeStore';\nimport AttachmentStore from '../../stores/AttachmentStore';\nimport DialogStore from '../../stores/DialogStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport MentionDropdown from '../common/MentionDropdown.react';\nimport EmojiDropdown from '../common/EmojiDropdown.react';\nimport VoiceRecorder from '../common/VoiceRecorder.react';\nimport DropZone from '../common/DropZone.react';\nimport SendAttachment from '../modals/SendAttachment';\n\nclass ComposeSection extends Component {\n  static getStores = () => [DialogStore, GroupStore, PreferencesStore, AttachmentStore, ComposeStore];\n\n  static calculateState(prevState) {\n    return {\n      peer: DialogStore.getCurrentPeer(),\n      text: ComposeStore.getText(),\n      profile: ActorClient.getUser(ActorClient.getUid()),\n      sendByEnter: PreferencesStore.isSendByEnterEnabled(),\n      mentions: ComposeStore.getMentions(),\n      isSendAttachmentOpen: AttachmentStore.isOpen(),\n      isMarkdownHintShow: prevState ? prevState.isMarkdownHintShow || false : false,\n      isAutoFocusEnabled: ComposeStore.isAutoFocusEnabled()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.setListeners();\n  }\n\n  componentWillUnmount() {\n    this.setBlur();\n    this.clearListeners();\n  }\n\n  componentDidMount() {\n    this.setFocus();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isAutoFocusEnabled } = this.state;\n\n    if (isAutoFocusEnabled) {\n      if (prevState.isAutoFocusEnabled !== true) {\n        this.setListeners();\n      }\n      this.setFocus();\n    } else {\n      if (prevState.isAutoFocusEnabled !== false) {\n        this.clearListeners();\n      }\n    }\n  }\n\n  setListeners() {\n    window.addEventListener('focus', this.setFocus);\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  clearListeners() {\n    window.removeEventListener('focus', this.setFocus);\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleKeyDown = (event) => {\n    const { isAutoFocusEnabled } = this.state;\n    if (isAutoFocusEnabled) {\n      if (!event.metaKey && !event.altKey && !event.ctrlKey && !event.shiftKey) {\n        this.setFocus();\n      }\n    }\n  };\n\n  onMessageChange = (event) => {\n    const text = event.target.value;\n    const { peer } = this.state;\n\n    if (text.length >= 3) {\n      this.setState({isMarkdownHintShow: true})\n    } else {\n      this.setState({isMarkdownHintShow: false})\n    }\n\n    ComposeActionCreators.onTyping(peer, text, this.getCaretPosition());\n  };\n\n  onKeyDown = event => {\n    const { mentions, sendByEnter } = this.state;\n\n    const send = () => {\n      event.preventDefault();\n      this.sendTextMessage();\n      this.setState({isMarkdownHintShow: false})\n    };\n\n    if (mentions === null) {\n      if (sendByEnter === true) {\n        if (event.keyCode === KeyCodes.ENTER && !event.shiftKey) {\n          send();\n        }\n      } else {\n        if (event.keyCode === KeyCodes.ENTER && event.metaKey) {\n          send();\n        }\n      }\n    }\n  };\n\n  sendTextMessage = () => {\n    const { peer, text } = this.state;\n\n    if (text.trim().length !== 0) {\n      MessageActionCreators.sendTextMessage(peer, text);\n    }\n    ComposeActionCreators.cleanText();\n  };\n\n  resetAttachmentForm = () => {\n    const form = findDOMNode(this.refs.attachmentForm);\n    form.reset();\n  };\n\n  onPaste = event => {\n    let preventDefault = false;\n    let attachments = [];\n\n    forEach(event.clipboardData.items, (item) => {\n      if (item.type.indexOf('image') !== -1) {\n        preventDefault = true;\n        attachments.push(item.getAsFile());\n      }\n    }, this);\n\n    if (attachments.length > 0) {\n      AttachmentsActionCreators.show(attachments);\n    }\n\n    if (preventDefault) {\n      event.preventDefault();\n    }\n  };\n\n  onMentionSelect = (mention) => {\n    const { peer, text } = this.state;\n\n    ComposeActionCreators.insertMention(peer, text, this.getCaretPosition(), mention);\n    this.setFocus();\n  };\n\n  onMentionClose = () => {\n    ComposeActionCreators.closeMention();\n  };\n\n  getCaretPosition = () => {\n    const composeArea = findDOMNode(this.refs.area);\n    const selection = Inputs.getInputSelection(composeArea);\n    return selection.start;\n  };\n\n  handleEmojiSelect = (emoji) => {\n    EmojiActionCreators.insertEmoji(this.state.text, this.getCaretPosition(), emoji);\n    this.setFocus();\n  };\n\n  setFocus = () => {\n    findDOMNode(this.refs.area).focus();\n  };\n\n  setBlur = () => {\n    findDOMNode(this.refs.area).blur();\n  };\n\n  handleDrop = (files) => {\n    let attachments = [];\n\n    forEach(files, (file) => attachments.push(file));\n\n    if (attachments.length > 0) {\n      AttachmentsActionCreators.show(attachments);\n    }\n  };\n\n  handleAttachmentClick = () => {\n    const attachmentInputNode = findDOMNode(this.refs.attachment);\n    attachmentInputNode.setAttribute('multiple', true);\n    attachmentInputNode.click();\n  };\n\n  handleComposeAttachmentChange = () => {\n    const attachmentInputNode = findDOMNode(this.refs.attachment);\n    let attachments = [];\n\n    forEach(attachmentInputNode.files, (file) => attachments.push(file));\n\n    AttachmentsActionCreators.show(attachments);\n    this.resetAttachmentForm();\n  };\n\n  sendVoiceRecord = (duration, record) => {\n    const { peer } = this.state;\n    MessageActionCreators.sendVoiceMessage(peer, duration, record);\n  };\n\n  render() {\n    const { text, profile, mentions, isMarkdownHintShow, isSendAttachmentOpen } = this.state;\n    const { intl } = this.context;\n    const markdownHintClassName = classnames('compose__markdown-hint', {\n      'compose__markdown-hint--active': isMarkdownHintShow\n    });\n\n    return (\n      <section className=\"compose\">\n        <MentionDropdown mentions={mentions}\n                         onSelect={this.onMentionSelect}\n                         onClose={this.onMentionClose}/>\n\n        <EmojiDropdown onSelect={this.handleEmojiSelect}/>\n\n        <VoiceRecorder onFinish={this.sendVoiceRecord}/>\n\n        <div className={markdownHintClassName}>\n          <b>*{intl.messages['compose.markdown.bold']}*</b>\n          &nbsp;&nbsp;\n          <i>_{intl.messages['compose.markdown.italic']}_</i>\n          &nbsp;&nbsp;\n          <code>```{intl.messages['compose.markdown.preformatted']}```</code>\n        </div>\n\n        <AvatarItem className=\"my-avatar\"\n                    image={profile.avatar}\n                    placeholder={profile.placeholder}\n                    title={profile.name}/>\n\n        <textarea className=\"compose__message\"\n                  onChange={this.onMessageChange}\n                  onKeyDown={this.onKeyDown}\n                  onPaste={this.onPaste}\n                  value={text}\n                  ref=\"area\"/>\n\n        <DropZone onDropComplete={this.handleDrop}>{intl.messages['compose.dropzone']}</DropZone>\n\n        <footer className=\"compose__footer row\">\n          <button className=\"button attachment\" onClick={this.handleAttachmentClick}>\n            <i className=\"material-icons\">attachment</i> {intl.messages['compose.attach']}\n          </button>\n          <span className=\"col-xs\"/>\n          <button className=\"button button--lightblue\" onClick={this.sendTextMessage}>\n            {intl.messages['compose.send']}\n          </button>\n        </footer>\n\n        <form className=\"compose__hidden\" ref=\"attachmentForm\">\n          <input ref=\"attachment\" onChange={this.handleComposeAttachmentChange} type=\"file\"/>\n        </form>\n\n        {/* Attachment modal */}\n        {isSendAttachmentOpen ? <SendAttachment/> : null}\n\n      </section>\n    );\n  }\n}\n\nexport default Container.create(ComposeSection, {pure: false});\n"]}