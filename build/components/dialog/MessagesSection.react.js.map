{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":"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","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, map, debounce, isFunction } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport Scrollbar from '../common/Scrollbar.react';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport DialogStore from '../../stores/DialogStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport DefaultMessageItem from './messages/MessageItem.react';\nimport MessagesList from './MessagesList.react';\n\n\nlet _delayed = [];\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, {maxWait: 100});\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    messages: PropTypes.array.isRequired,\n    overlay: PropTypes.array.isRequired,\n    peer: PropTypes.object.isRequired,\n    isMember: PropTypes.bool.isRequired,\n    onScroll: PropTypes.func.isRequired\n  };\n\n  static contextTypes = {\n    delegate: PropTypes.object\n  };\n\n  static getStores() {\n    return [MessageStore, VisibilityStore]\n  }\n\n  static calculateState() {\n    return {\n      selectedMessages: MessageStore.getSelected(),\n      isAllMessagesLoaded: MessageStore.isLoaded(),\n      isAppVisible: VisibilityStore.isAppVisible()\n    }\n  }\n\n  componentDidUpdate() {\n    const { isAppVisible } = this.state;\n    if (isAppVisible) {\n      flushDelayed();\n    }\n  };\n\n  onMessageSelect = (rid) => {\n    const { selectedMessages } = this.state;\n    if (selectedMessages.has(rid)) {\n      MessageActionCreators.setSelected(selectedMessages.remove(rid));\n    } else {\n      MessageActionCreators.setSelected(selectedMessages.add(rid));\n    }\n  };\n\n  onMessageVisibilityChange = (message, isVisible) => {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  };\n\n  getComponents() {\n    const {dialog, messages} = this.context.delegate.components;\n    if (dialog && dialog.messages && isFunction(dialog.messages.message)) {\n      return {\n        MessageItem: dialog.messages.message\n      };\n    }\n\n    return {\n      MessageItem: DefaultMessageItem\n    };\n  }\n\n  render() {\n    const { peer, overlay, messages, isMember } = this.props;\n    const { selectedMessages, isAllMessagesLoaded } = this.state;\n\n    const components = this.getComponents();\n\n    return (\n      <Scrollbar onScroll={this.props.onScroll} ref=\"messagesScroll\">\n        <MessagesList\n          peer={peer}\n          overlay={overlay}\n          messages={messages}\n          selectedMessages={selectedMessages}\n          isMember={isMember}\n          isAllMessagesLoaded={isAllMessagesLoaded}\n          components={components}\n          onSelect={this.onMessageSelect}\n          onVisibilityChange={this.onMessageVisibilityChange}\n        />\n      </Scrollbar>\n    );\n  }\n}\n\nexport default Container.create(MessagesSection, {pure: false, withProps: true});\n"]}