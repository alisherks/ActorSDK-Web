{"version":3,"sources":["../../../../src/components/dialog/messages/Voice.react.js"],"names":[],"mappings":"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","file":"Voice.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classnames from 'classnames';\n\nlet cache = [];\n\n/**\n * Class that represents a component for display voice message content\n */\nclass Voice extends Component {\n  static propTypes = {\n    content: PropTypes.object.isRequired,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: this.isCached(),\n      isPlaying: false,\n      currentTime: 0,\n      duration: props.content.duration / 1000\n    };\n  }\n\n  componentDidMount() {\n    const { content } = this.props;\n\n    if (content.fileUrl) {\n      this.createAudioElement(content.fileUrl);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { content } = this.props;\n\n    if (content.fileUrl && !this.isCached()) {\n      this.createAudioElement(content.fileUrl);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.audio) {\n      this.audio.removeEventListener('loadeddata', this.handleLoading);\n      this.audio.removeEventListener('timeupdate', this.handleTimeUpdate);\n      this.audio.removeEventListener('ended', this.handlePlayEnding);\n      this.audio.removeEventListener('canplaythrough', this.handleLoading);\n    }\n  }\n\n  createAudioElement(fileUrl) {\n    this.audio = new Audio(fileUrl);\n    this.audio.volume = 1;\n    this.audio.addEventListener('loadeddata', this.handleLoading);\n    this.audio.addEventListener('timeupdate', this.handleTimeUpdate);\n    this.audio.addEventListener('ended', this.handlePlayEnding);\n    this.audio.addEventListener('canplaythrough', this.handleLoading);\n    this.setCached();\n  }\n\n  isCached() {\n    const { content } = this.props;\n    return cache[content.fileUrl] === true;\n  }\n\n  setCached() {\n    const { content } = this.props;\n    cache[content.fileUrl] = true;\n    this.setState({isLoaded: cache[content.fileUrl]});\n  }\n\n  humanTime = (millis) => {\n    const minutes = Math.floor(millis / 60000);\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\n\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\n  };\n\n  handleTimeUpdate = (event) => {\n    this.setState({\n      currentTime: this.audio.currentTime,\n      duration: this.audio.duration\n    })\n  };\n\n  handlePlayClick = () => {\n    this.audio.play();\n    this.setState({isPlaying: true})\n  };\n\n  handlePauseClick = () => {\n    this.audio.pause();\n    this.handlePlayEnding();\n  };\n\n  handlePlayEnding = () => {\n    this.setState({isPlaying: false});\n  };\n\n  handleRewind = (event) => {\n    const rewindRect = findDOMNode(this.refs.rewind).getBoundingClientRect();\n    const rewindPosition = (event.clientX - rewindRect.left) / rewindRect.width;\n\n    this.audio.currentTime = this.audio.duration * rewindPosition;\n  };\n\n  handleLoading = () => this.setCached();\n\n  render() {\n    const { className } = this.props;\n    const { isPlaying, currentTime, duration, isLoaded } = this.state;\n    const voiceClassName = classnames(className, 'row');\n\n    const current = this.humanTime(currentTime * 1000);\n    const total = this.humanTime(duration * 1000);\n    const progress = (currentTime / duration) * 100;\n\n    return (\n      <div className={voiceClassName}>\n        <div className=\"voice row\">\n          <div className=\"voice__controls\">\n            {\n              !isLoaded\n                ? <i className=\"material-icons\" style={{opacity: 0.3}}>play_circle_filled</i>\n                : isPlaying\n                    ? <i className=\"material-icons\" onClick={this.handlePauseClick}>pause_circle_filled</i>\n                    : <i className=\"material-icons\" onClick={this.handlePlayClick}>play_circle_filled</i>\n            }\n          </div>\n          <div className=\"voice__body col-xs\">\n            <div className=\"row\">\n              <div className=\"col-xs text-left\">\n                <time className=\"voice__time voice__time--current\">{current}</time>\n              </div>\n              <div className=\"col-xs text-right\">\n                <time className=\"voice__time voice__time--total\">{total}</time>\n              </div>\n            </div>\n            {\n              isLoaded\n                ? <div className=\"voice__rewind\" onClick={this.handleRewind} ref=\"rewind\">\n                    <div className=\"played\" style={{width: progress + '%'}}/>\n                  </div>\n                : <div className=\"voice__rewind voice__rewind--loading\"/>\n            }\n          </div>\n        </div>\n        <div className=\"col-xs\"/>\n      </div>\n    );\n  }\n}\n\nexport default Voice;\n"]}