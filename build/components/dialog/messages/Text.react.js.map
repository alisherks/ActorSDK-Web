{"version":3,"sources":["../../../../src/components/dialog/messages/Text.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA,SAAS,WAAT,CAAqB,IAArB,EAA2B;AACzB,MAAI,gBAAgB,IAAhB,CADqB;AAEzB,kBAAgB,sBAAY,cAAZ,CAA2B,aAA3B,CAAhB,CAFyB;AAGzB,kBAAgB,kCAAiB,aAAjB,CAAhB,CAHyB;;AAKzB,SAAO,aAAP,CALyB;CAA3B;;IAQM;;;;;;;;;iBAMJ,iDAAoB;;;AAClB,0BAAsB,YAAM;AAC1B,UAAM,OAAO,kCAAP,CADoB;AAE1B,UAAM,aAAa,KAAK,oBAAL,CAA0B,KAA1B,CAAb,CAFoB;AAG1B,WAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,WAAW,MAAX,EAAmB,GAAvC,EAA4C;AAC1C,YAAM,YAAY,WAAW,CAAX,CAAZ,CADoC;AAE1C,4BAAK,cAAL,CAAoB,UAAU,UAAV,CAApB,CAF0C;OAA5C;KAHoB,CAAtB,CADkB;;;AANhB,iBAiBJ,2BAAS;iBACqB,KAAK,KAAL,CADrB;QACC,mBADD;QACO,6BADP;;;AAGP,WACE;;QAAK,WAAW,SAAX,EAAL;MACE,uCAAK,WAAU,MAAV,EAAiB,yBAAyB,EAAC,QAAQ,YAAY,IAAZ,CAAR,EAA1B,EAAtB,CADF;KADF,CAHO;;;SAjBL;;;KACG,YAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UAAjB;AACN,aAAW,iBAAU,MAAV;;kBAyBA","file":"Text.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport hljs from 'highlight.js';\nimport ActorClient from '../../../utils/ActorClient';\n\nimport { processEmojiText } from '../../../utils/EmojiUtils';\n\nfunction processText(text) {\n  let processedText = text;\n  processedText = ActorClient.renderMarkdown(processedText);\n  processedText = processEmojiText(processedText);\n\n  return processedText;\n}\n\nclass Text extends Component {\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    className: PropTypes.string\n  };\n\n  componentDidMount() {\n    requestAnimationFrame(() => {\n      const node = findDOMNode(this);\n      const codeBlocks = node.getElementsByTagName('pre');\n      for (let i = 0; i < codeBlocks.length; i++) {\n        const codeBlock = codeBlocks[i];\n        hljs.highlightBlock(codeBlock.firstChild);\n      }\n    });\n  }\n\n  render() {\n    const { text, className } = this.props;\n\n    return (\n      <div className={className}>\n        <div className=\"text\" dangerouslySetInnerHTML={{__html: processText(text)}}/>\n      </div>\n    );\n  }\n}\n\nexport default Text;\n"]}