{"version":3,"sources":["../../../../src/components/dialog/messages/State.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;IAEM;;;;;;;;;kBAcJ,qCAAc;QACL,QAAS,KAAK,KAAL,CAAW,OAAX,CAAT,MADK;;;AAGZ,YAAQ,KAAR;AACE,WAAK,iCAAc,OAAd;AACH,eAAO;;YAAG,WAAU,uCAAV,EAAH;;SAAP,CADF;AADF,WAGO,iCAAc,IAAd;AACH,eAAO;;YAAG,WAAU,oCAAV,EAAH;;SAAP,CADF;AAHF,WAKO,iCAAc,QAAd;AACH,eAAO;;YAAG,WAAU,wCAAV,EAAH;;SAAP,CADF;AALF,WAOO,iCAAc,IAAd;AACH,eAAO;;YAAG,WAAU,oCAAV,EAAH;;SAAP,CADF;AAPF,WASO,iCAAc,KAAd;AACH,eAAO;;YAAG,WAAU,qCAAV,EAAH;;SAAP,CADF;AATF,WAWO,iCAAc,OAAd,CAXP;AAYE;AACE,eAAO,IAAP,CADF;AAZF,KAHY;;;AAdV,kBAkCJ,2BAAS;QACC,UAAY,KAAK,KAAL,CAAZ,QADD;;;AAGP,QAAI,QAAQ,OAAR,CAAgB,OAAhB,KAA4B,uCAAoB,OAApB,EAA6B;AAC3D,aAAO,IAAP,CAD2D;KAA7D;;AAIA,QAAM,QAAQ,KAAK,WAAL,EAAR,CAPC;AAQP,QAAI,CAAC,KAAD,EAAQ;AACV,aAAO,IAAP,CADU;KAAZ;;AAIA,WACE;;QAAK,WAAU,iBAAV,EAAL;MACG,KADH;KADF,CAZO;;;SAlCL;;;MACG,YAAY;AACjB,WAAS,iBAAU,KAAV,CAAgB;AACvB,WAAO,iBAAU,KAAV,CAAgB,CACrB,iCAAc,OAAd,EACA,iCAAc,IAAd,EACA,iCAAc,QAAd,EACA,iCAAc,IAAd,EACA,iCAAc,KAAd,EACA,iCAAc,OAAd,CANK,EAOJ,UAPI;GADA,EASN,UATM;;kBAoDE","file":"State.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { MessageContentTypes, MessageStates } from '../../../constants/ActorAppConstants';\n\nclass State extends Component {\n  static propTypes = {\n    message: PropTypes.shape({\n      state: PropTypes.oneOf([\n        MessageStates.PENDING,\n        MessageStates.SENT,\n        MessageStates.RECEIVED,\n        MessageStates.READ,\n        MessageStates.ERROR,\n        MessageStates.UNKNOWN\n      ]).isRequired\n    }).isRequired\n  };\n\n  renderState() {\n    const {state} = this.props.message;\n\n    switch (state) {\n      case MessageStates.PENDING:\n        return <i className=\"status status--pending material-icons\">access_time</i>;\n      case MessageStates.SENT:\n        return <i className=\"status status--sent material-icons\">done</i>;\n      case MessageStates.RECEIVED:\n        return <i className=\"status status--received material-icons\">done_all</i>;\n      case MessageStates.READ:\n        return <i className=\"status status--read material-icons\">done_all</i>;\n      case MessageStates.ERROR:\n        return <i className=\"status status--error material-icons\">report_problem</i>;\n      case MessageStates.UNKNOWN:\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    if (message.content.content === MessageContentTypes.SERVICE) {\n      return null;\n    }\n\n    const state = this.renderState();\n    if (!state) {\n      return null;\n    }\n\n    return (\n      <div className=\"message__status\">\n        {state}\n      </div>\n    );\n  }\n}\n\nexport default State;\n"]}