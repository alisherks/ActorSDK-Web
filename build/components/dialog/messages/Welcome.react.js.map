{"version":3,"sources":["../../../../src/components/dialog/messages/Welcome.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;AAEA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEM;;;;;;;;;oBASJ,2BAAS;QACC,OAAS,KAAK,KAAL,CAAT,KADD;QAEC,OAAS,KAAK,OAAL,CAAT,KAFD;;;AAIP,QAAI,oBAAJ,CAJO;AAKP,YAAQ,KAAK,IAAL;AACN,WAAK,6BAAU,IAAV;AACH,YAAM,OAAO,oBAAU,OAAV,CAAkB,KAAK,EAAL,CAAzB,CADR;AAEE,sBAAc,iEAAsB,IAAG,yBAAH,EAA6B,QAAQ,EAAC,MAAM,KAAK,IAAL,EAAf,EAAnD,CAAd,CAFF;AAGE,cAHF;AADF,WAKO,6BAAU,KAAV;AACH,YAAM,QAAQ,qBAAW,QAAX,CAAoB,KAAK,EAAL,CAA5B,CADR;AAEE,YAAM,OAAO,oBAAU,OAAV,EAAP,CAFR;AAGE,YAAM,QAAQ,oBAAU,OAAV,CAAkB,MAAM,OAAN,CAA1B,CAHR;AAIE,YAAM,UAAU,MAAM,OAAN,KAAkB,IAAlB,GAAyB,KAAK,QAAL,CAAc,2BAAd,CAAzB,GAAsE,MAAM,IAAN,CAJxF;AAKE,sBAAc,CACZ,iEAAsB,IAAG,4BAAH,EAAgC,KAAK,CAAL;AAChC,kBAAQ,EAAC,MAAM,MAAM,IAAN,EAAY,gBAAnB,EAAR,EADtB,CADY,EAIZ;;YAAG,KAAK,CAAL,EAAH;UACG,KAAK,QAAL,CAAc,qCAAd,CADH;UAEE;;cAAG,SAAS;uBAAM,4BAAkB,IAAlB,CAAuB,KAAvB;eAAN,EAAZ;YAAkD,KAAK,QAAL,CAAc,sCAAd,CAAlD;WAFF;UAGG,KAAK,QAAL,CAAc,mCAAd,CAHH;SAJY,CAAd,CALF;AAeE,cAfF;AALF,KALO;;AA4BP,WACE;;QAAI,WAAU,8BAAV,EAAJ;MACE;;UAAK,WAAU,eAAV,EAAL;QACE;;YAAK,WAAU,gBAAV,EAAL;UACE,uCAAK,WAAU,iBAAV;AACA,qCAAyB,EAAC,QAAQ,kDAAR,EAA1B,EADL,CADF;SADF;OADF;MAOE;;UAAK,WAAU,sBAAV,EAAL;QACG,WADH;OAPF;KADF,CA5BO;;;SATL;;;QACG,YAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UAAjB;;AAFJ,QAKG,eAAe;AACpB,QAAM,iBAAU,MAAV;;;;AA+CV,qBAAW,OAAX,CAAmB,OAAnB;;kBAEe","file":"Welcome.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport ReactMixin from 'react-mixin';\nimport { FormattedHTMLMessage } from 'react-intl'\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\n\nimport { PeerTypes } from '../../../constants/ActorAppConstants';\n\nimport InviteUserActions from '../../../actions/InviteUserActions';\n\nimport UserStore from '../../../stores/UserStore';\nimport GroupStore from '../../../stores/GroupStore';\n\nclass Welcome extends Component {\n  static propTypes = {\n    peer: PropTypes.object.isRequired\n  };\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  render() {\n    const { peer } = this.props;\n    const { intl } = this.context;\n\n    let welcomeText;\n    switch (peer.type) {\n      case PeerTypes.USER:\n        const user = UserStore.getUser(peer.id);\n        welcomeText = <FormattedHTMLMessage id=\"message.welcome.private\" values={{name: user.name}}/>;\n        break;\n      case PeerTypes.GROUP:\n        const group = GroupStore.getGroup(peer.id);\n        const myID = UserStore.getMyId();\n        const admin = UserStore.getUser(group.adminId);\n        const creator = group.adminId === myID ? intl.messages['message.welcome.group.you'] : admin.name;\n        welcomeText = [\n          <FormattedHTMLMessage id=\"message.welcome.group.main\" key={1}\n                                values={{name: group.name, creator}}/>\n        ,\n          <p key={2}>\n            {intl.messages['message.welcome.group.actions.start']}\n            <a onClick={() => InviteUserActions.show(group)}>{intl.messages['message.welcome.group.actions.invite']}</a>\n            {intl.messages['message.welcome.group.actions.end']}\n          </p>\n        ];\n        break;\n    }\n\n    return(\n      <li className=\"message message--welcome row\">\n        <div className=\"message__info\">\n          <div className=\"welcome-avatar\">\n            <svg className=\"icon icon--gray\"\n                 dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#star\"/>'}}/>\n          </div>\n        </div>\n        <div className=\"message__body col-xs\">\n          {welcomeText}\n        </div>\n      </li>\n    )\n  }\n}\n\nReactMixin.onClass(Welcome, PureRenderMixin);\n\nexport default Welcome;\n"]}