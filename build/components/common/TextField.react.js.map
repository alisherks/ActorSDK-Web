{"version":3,"sources":["../../../src/components/common/TextField.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;;;;;;;;;;;IAEM;;;AAkBJ,WAlBI,SAkBJ,CAAY,KAAZ,EAAmB;0BAlBf,WAkBe;;iDACjB,sBAAM,KAAN,GADiB;;UAgDnB,QAAQ,YAAM;UACJ,MAAQ,MAAK,KAAL,CAAR,IADI;;AAEZ,UAAM,QAAQ,MAAK,KAAL,CAAW,GAAX,IAAkB,MAAK,IAAL,CAAU,KAAV,CAFpB;AAGZ,UAAI,CAAC,KAAD,EAAQ;AACV,eADU;OAAZ;;AAIA,mBAAa,YAAM;AACjB,mCAAY,KAAZ,EAAmB,KAAnB,GADiB;OAAN,CAAb,CAPY;KAAN,CAhDW;;UA4DnB,eAAe,UAAC,KAAD,EAAW;UAChB,WAAa,MAAK,KAAL,CAAb,SADgB;;AAExB,kBAAY,SAAS,KAAT,CAAZ,CAFwB;KAAX,CA5DI;;UAiEnB,cAAc,UAAC,KAAD,EAAW;UACf,UAAY,MAAK,KAAL,CAAZ,QADe;;AAEvB,YAAK,QAAL,CAAc,EAAC,WAAW,IAAX,EAAf,EAFuB;AAGvB,iBAAW,QAAQ,KAAR,CAAX,CAHuB;KAAX,CAjEK;;UAuEnB,aAAa,UAAC,KAAD,EAAW;UACd,SAAW,MAAK,KAAL,CAAX,OADc;;AAEtB,YAAK,QAAL,CAAc,EAAC,WAAW,KAAX,EAAf,EAFsB;AAGtB,gBAAU,OAAO,KAAP,CAAV,CAHsB;KAAX,CAvEM;;AAGjB,UAAK,KAAL,GAAa;AACX,iBAAW,KAAX;AACA,eAAS,WAAW,KAAK,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAX;KAFX,CAHiB;;GAAnB;;AAlBI,sBA2BJ,2BAAS;iBACqE,KAAK,KAAL,CADrE;QACC,6BADD;QACY,qCADZ;QAC2B,mBAD3B;QACiC,qBADjC;QACwC,iBADxC;QAC6C,2BAD7C;QACuD,6BADvD;iBAEwB,KAAK,KAAL,CAFxB;QAEC,6BAFD;QAEY,yBAFZ;;;AAIP,QAAM,iBAAiB,0BAAW,uBAAX,EAAoC,SAApC,EAA+C;AACpE,gCAA0B,SAA1B;AACA,iCAA2B,SAAS,MAAM,MAAN,GAAe,CAAf;AACpC,mCAA6B,QAA7B;AACA,qCAA+B,SAA/B;KAJqB,CAAjB,CAJC;;AAWP,QAAM,aAAa;AACjB,YAAM,QAAQ,MAAR;AACN,UAAI,OAAJ;AACA,gBAAU,KAAK,YAAL;AACV,eAAS,KAAK,WAAL;AACT,cAAQ,KAAK,UAAL;AACR,kBANiB;AAOjB,wBAPiB;AAQjB,WAAK,MAAM,GAAN,GAAY,OAAZ;KARD,CAXC;;AAsBP,WACE;;QAAK,WAAW,cAAX,EAAL;MAEI,gBACI;;UAAO,SAAS,OAAT,EAAkB,aAAa,KAAK,KAAL,EAAtC;QAAmD,aAAnD;OADJ,GAEI,IAFJ;MAIF,uCAAW,UAAX,CANF;MAQI,YACI;;UAAM,WAAU,OAAV,EAAN;QAAyB,SAAzB;OADJ,GAEI,IAFJ;KATN,CAtBO;;;SA3BL;;;UACG,YAAY;AACjB,aAAW,iBAAU,MAAV;AACX,iBAAe,iBAAU,SAAV,CAAoB,CACjC,iBAAU,IAAV,EACA,iBAAU,MAAV,CAFa,CAAf;AAIA,QAAM,iBAAU,MAAV;AACN,SAAO,iBAAU,MAAV;AACP,OAAK,iBAAU,MAAV;AACL,YAAU,iBAAU,IAAV;AACV,aAAW,iBAAU,MAAV;;AAEX,YAAU,iBAAU,IAAV;AACV,WAAS,iBAAU,IAAV;AACT,UAAQ,iBAAU,IAAV;;kBAiFG","file":"TextField.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport classnames from 'classnames';\n\nclass TextField extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    floatingLabel: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.string\n    ]),\n    type: PropTypes.string,\n    value: PropTypes.string,\n    ref: PropTypes.string,\n    disabled: PropTypes.bool,\n    errorText: PropTypes.string,\n\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false,\n      inputId: 'input-' + Math.random().toString(36).substr(2, 5)\n    };\n  }\n\n  render() {\n    const { className, floatingLabel, type, value, ref, disabled, errorText } = this.props;\n    const { isFocused, inputId } = this.state;\n\n    const inputClassName = classnames('input input__material', className, {\n      'input__material--focus': isFocused,\n      'input__material--filled': value && value.length > 0,\n      'input__material--disabled': disabled,\n      'input__material--with-error': errorText\n    });\n\n    const inputProps = {\n      type: type || 'text',\n      id: inputId,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      value,\n      disabled,\n      ref: ref ? ref : 'input'\n    };\n\n    return (\n      <div className={inputClassName}>\n        {\n          floatingLabel\n            ? <label htmlFor={inputId} onMouseDown={this.focus}>{floatingLabel}</label>\n            : null\n        }\n        <input {...inputProps}/>\n        {\n          errorText\n            ? <span className=\"error\">{errorText}</span>\n            : null\n        }\n      </div>\n    );\n  }\n\n  focus = () => {\n    const { ref } = this.props;\n    const input = this.props.ref || this.refs.input\n    if (!input) {\n      return;\n    }\n\n    setImmediate(() => {\n      findDOMNode(input).focus();\n    });\n  };\n\n  handleChange = (event) => {\n    const { onChange } = this.props;\n    onChange && onChange(event);\n  };\n\n  handleFocus = (event) => {\n    const { onFocus } = this.props;\n    this.setState({isFocused: true});\n    onFocus && onFocus(event);\n  };\n\n  handleBlur = (event) => {\n    const { onBlur } = this.props;\n    this.setState({isFocused: false});\n    onBlur && onBlur(event);\n  };\n}\n\nexport default TextField;\n"]}