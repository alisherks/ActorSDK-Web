{"version":3,"sources":["../../../src/components/common/MenuOverlay.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEM;;;cAGG,2CAAiB;AACtB,QAAM,UAAU,wBAAc,UAAd,EAAV,CADgB;;AAGtB,WAAO;AACL,6BAAuB,wBAAc,qBAAd,CAAoC,QAAQ,GAAR,CAA3D;AACA,2BAAqB,wBAAc,mBAAd,EAArB;AACA,kBAAY,wBAAc,aAAd,EAAZ;AACA,kBAAY,wBAAc,aAAd,EAAZ;AACA,mBAAa,wBAAc,OAAd,EAAb;AACA,sBANK;KAAP,CAHsB;;;AAaxB,WAhBI,WAgBJ,CAAY,KAAZ,EAAmB;0BAhBf,aAgBe;;4CACjB,sBAAM,KAAN,GADiB;GAAnB;;AAhBI,wBAoBJ,2BAAS;iBAC8F,KAAK,KAAL,CAD9F;QACC,qDADD;QACwB,iDADxB;QAC6C,yBAD7C;QACsD,+BADtD;QACkE,iCADlE;QAC+E,+BAD/E;;AAEP,QAAM,cAAc,sBAAY,cAAZ,EAAd,CAFC;;AAIP,QAAM,uBAAuB,0BAAW,cAAX,EAA2B;AACtD,8BAAwB,yBAAyB,mBAAzB;KADG,CAAvB,CAJC;;AAQP,WACE;;QAAK,WAAW,oBAAX,EAAL;MAEI,wBACI,0DAAgB,SAAS,OAAT;AACA,oBAAY,UAAZ;AACA,cAAM,WAAN;AACA,4BAHhB,CADJ,GAKI,IALJ;MAQA,sBACI,6DAAmB,MAAM,WAAN;AACA,oBAAY,UAAZ;AACA,4BAFnB,CADJ,GAII,IAJJ;KAXN,CARO;;;SApBL;;;YACG,YAAY;SAAM;CAAN;;kBAiDN,iBAAU,MAAV,CAAiB,WAAjB,EAA8B,EAAC,MAAM,KAAN,EAA/B","file":"MenuOverlay.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\n\nimport MessageActions from './dropdown/MessageActions.react';\nimport RecentContextMenu from './dropdown/RecentContextMenu.react'\n\nimport DropdownStore from '../../stores/DropdownStore';\nimport DialogStore from '../../stores/DialogStore';\n\nclass MenuOverlay extends Component {\n  static getStores = () => [DropdownStore, DialogStore];\n\n  static calculateState() {\n    const message = DropdownStore.getMessage();\n\n    return {\n      isMessageDropdownOpen: DropdownStore.isMessageDropdownOpen(message.rid),\n      isRecentContextOpen: DropdownStore.isRecentContextOpen(),\n      targetRect: DropdownStore.getTargetRect(),\n      contextPos: DropdownStore.getContextPos(),\n      contextPeer: DropdownStore.getPeer(),\n      message\n    };\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { isMessageDropdownOpen, isRecentContextOpen, message, targetRect, contextPeer, contextPos } = this.state;\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    const menuOverlayClassName = classnames('menu-overlay', {\n      'menu-overlay--opened': isMessageDropdownOpen || isRecentContextOpen\n    });\n\n    return (\n      <div className={menuOverlayClassName}>\n        {\n          isMessageDropdownOpen\n            ? <MessageActions message={message}\n                              targetRect={targetRect}\n                              peer={currentPeer}\n                              hideOnScroll/>\n            : null\n        }\n        {\n          isRecentContextOpen\n            ? <RecentContextMenu peer={contextPeer}\n                                 contextPos={contextPos}\n                                 hideOnScroll/>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Container.create(MenuOverlay, {pure: false});\n"]}