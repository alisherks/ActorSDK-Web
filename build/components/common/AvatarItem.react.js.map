{"version":3,"sources":["../../../src/components/common/AvatarItem.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;;;IAEqB;;;AAWnB,WAXmB,UAWnB,CAAY,KAAZ,EAAmB;0BAXA,YAWA;;iDACjB,sBAAM,KAAN,GADiB;;UAInB,cAAc,UAAC,KAAD,EAAW;UACf,UAAY,MAAK,KAAL,CAAZ,QADe;;AAEvB,iBAAW,QAAQ,KAAR,CAAX,CAFuB;KAAX,CAJK;;;GAAnB;;AAXmB,uBAoBnB,2BAAS;iBACgD,KAAK,KAAL,CADhD;QACC,qBADD;QACQ,6BADR;QACmB,qBADnB;QAC0B,mBAD1B;QACgC,iCADhC;;;AAGP,QAAM,uBAAuB,0BAAW,qBAAX,4BAA0D,WAA1D,CAAvB,CAHC;AAIP,QAAM,kBAAkB,0BAAW,QAAX,EAAqB;AAC3C,sBAAgB,SAAS,MAAT;AAChB,uBAAiB,SAAS,OAAT;AACjB,wBAAkB,SAAS,QAAT;AAClB,uBAAiB,SAAS,OAAT;AACjB,qBAAe,SAAS,KAAT;AACf,sBAAgB,SAAS,MAAT;AAChB,gCAA0B,CAAC,KAAD;KAPJ,EAQrB,SARqB,CAAlB,CAJC;;AAcP,QAAM,SAAS,QAAQ,uCAAK,KAAK,KAAL,EAAY,WAAU,eAAV,EAA0B,KAAK,KAAL,EAA3C,CAAR,GAAmE,IAAnE,CAdR;;AAgBP,QAAM,iBAAiB,kCAAjB,CAhBC;;AAkBP,QAAI,wBAAJ,CAlBO;AAmBP,QAAI,MAAM,MAAN,IAAgB,CAAhB,EAAmB;AACrB,wBAAkB,GAAlB,CADqB;KAAvB,MAEO;AACL,wBAAkB,MAAM,CAAN,EAAS,KAAT,CAAe,cAAf,IAAiC,GAAjC,GAAuC,MAAM,CAAN,CAAvC,CADb;KAFP;;AAMA,WACE;;QAAK,WAAW,eAAX,EAA4B,SAAS,KAAK,WAAL,EAA1C;MACG,MADH;MAEE;;UAAM,WAAW,oBAAX,EAAN;QAAwC,eAAxC;OAFF;KADF,CAzBO;;;SApBU;;;WACZ,YAAY;AACjB,aAAW,iBAAU,MAAV;AACX,SAAO,iBAAU,MAAV;AACP,eAAa,iBAAU,MAAV,CAAiB,UAAjB;AACb,QAAM,iBAAU,MAAV;AACN,SAAO,iBAAU,MAAV,CAAiB,UAAjB;;AAEP,WAAS,iBAAU,IAAV;;kBARQ","file":"AvatarItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nexport default class AvatarItem extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    image: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    size: PropTypes.string,\n    title: PropTypes.string.isRequired,\n\n    onClick: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick = (event) => {\n    const { onClick } = this.props;\n    onClick && onClick(event);\n  };\n\n  render() {\n    const { title, className, image, size, placeholder } = this.props;\n\n    const placeholderClassName = classnames('avatar__placeholder', `avatar__placeholder--${placeholder}`);\n    const avatarClassName = classnames('avatar', {\n      'avatar--tiny': size === 'tiny',\n      'avatar--small': size === 'small',\n      'avatar--medium': size === 'medium',\n      'avatar--large': size === 'large',\n      'avatar--big': size === 'big',\n      'avatar--huge': size === 'huge',\n      'avatar--without-shadow': !image\n    }, className);\n\n    const avatar = image ? <img alt={title} className=\"avatar__image\" src={image}/> : null;\n\n    const emojiFirstChar = /([\\uE000-\\uF8FF]|\\uD83C|\\uD83D)/g;\n\n    let placeholderChar;\n    if (title.length == 0) {\n      placeholderChar = '#'\n    } else {\n      placeholderChar = title[0].match(emojiFirstChar) ? '#' : title[0];\n    }\n\n    return (\n      <div className={avatarClassName} onClick={this.handleClick}>\n        {avatar}\n        <span className={placeholderClassName}>{placeholderChar}</span>\n      </div>\n    );\n  }\n}\n"]}