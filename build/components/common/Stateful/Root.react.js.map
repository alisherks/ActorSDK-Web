{"version":3,"sources":["../../../../src/components/common/Stateful/Root.react.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB;;;AACnB,WADmB,IACnB,CAAY,KAAZ,EAAmB;0BADA,MACA;;4CACjB,sBAAM,KAAN,GADiB;GAAnB;;AADmB,iBAWnB,2BAAS;iBACuC,KAAK,KAAL,CADvC;QACC,mCADD;QACe,6BADf;QAC0B,2BAD1B;;;AAGP,QAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAQ,IAAR,EAAiB;AACnC,aAAO,KAAC,KAAU,qCAAkB,OAAlB,IAA6B,0BAAvC,IACL,UAAU,qCAAkB,UAAlB,IAAgC,6BAA1C,IACA,UAAU,qCAAkB,OAAlB,IAA6B,0BAAvC,IACA,UAAU,qCAAkB,OAAlB,IAA6B,0BAAvC,CAJgC;KAAjB,CAHb;;AAUP,QAAM,oBAAoB,kBAAK,QAAL,EAAe,UAAC,KAAD,EAAW;AAClD,UAAI,YAAY,YAAZ,EAA0B,MAAM,IAAN,CAA9B,EAA2C,OAAO,KAAP,CAA3C;KADuC,CAAnC,CAVC;;AAcP,WACE;;QAAK,WAAW,SAAX,EAAL;MAA4B,iBAA5B;KADF,CAdO;;;SAXU;;;KAKZ,YAAY;AACjB,aAAW,iBAAU,MAAV;AACX,gBAAc,iBAAU,MAAV,CAAiB,UAAjB;AACd,YAAU,iBAAU,KAAV;;kBARO","file":"Root.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { find } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { AsyncActionStates } from '../../../constants/ActorAppConstants';\n\nimport Pending from './Pending.react';\nimport Processing from './Processing.react';\nimport Success from './Success.react';\nimport Failure from './Failure.react';\n\nexport default class Root extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    className: PropTypes.string,\n    currentState: PropTypes.number.isRequired,\n    children: PropTypes.array\n  };\n\n  render() {\n    const { currentState, className, children } = this.props;\n\n    const equalsState = (state, type) => {\n      return (state === AsyncActionStates.PENDING && type === Pending) ||\n        (state === AsyncActionStates.PROCESSING && type === Processing) ||\n        (state === AsyncActionStates.SUCCESS && type === Success) ||\n        (state === AsyncActionStates.FAILURE && type === Failure)\n    };\n\n    const currentStateChild = find(children, (child) => {\n      if (equalsState(currentState, child.type)) return child;\n    });\n\n    return (\n      <div className={className}>{currentStateChild}</div>\n    )\n  }\n}\n"]}