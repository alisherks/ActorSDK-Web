{"version":3,"sources":["../../../src/components/common/Fold.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;;;IAEM;;;AAYJ,WAZI,IAYJ,CAAY,KAAZ,EAAmB;0BAZf,MAYe;;iDACjB,sBAAM,KAAN,GADiB;;UAQnB,UAAU;aAAM,MAAK,QAAL,CAAc,EAAC,QAAQ,CAAC,MAAK,KAAL,CAAW,MAAX,EAAxB;KAAN,CARS;;AAGjB,UAAK,KAAL,GAAa;AACX,cAAQ,KAAR;KADF,CAHiB;;GAAnB;;AAZI,iBAsBJ,2BAAS;iBAC6C,KAAK,KAAL,CAD7C;QACC,mBADD;QACO,qCADP;QACsB,qBADtB;QAC6B,iCAD7B;;AAEP,QAAM,qBAAqB,0BAAW,qBAAX,EAAkC,aAAlC,CAArB,CAFC;AAGP,QAAM,YAAY,0BAAW;AAC3B,cAAQ,IAAR;AACA,oBAAc,KAAK,KAAL,CAAW,MAAX;KAFE,CAAZ,CAHC;;AAQP,QAAI,iBAAJ,CARO;AASP,QAAI,IAAJ,EAAU;AACR,iBAAW;;UAAG,WAAW,kBAAX,EAAH;QAAmC,IAAnC;OAAX,CADQ;KAAV;AAGA,QAAI,WAAJ,EAAiB;AACf,iBAAW,WAAX,CADe;KAAjB;;AAIA,WACE;;QAAK,WAAW,SAAX,EAAL;MACE;;UAAK,WAAU,aAAV,EAAwB,SAAS,KAAK,OAAL,EAAtC;QACG,QADH;QAEG,KAFH;QAGE;;YAAG,WAAU,2CAAV,EAAH;;SAHF;OADF;MAME;;UAAK,WAAU,eAAV,EAAL;QACG,KAAK,KAAL,CAAW,QAAX;OAPL;KADF,CAhBO;;;SAtBL;;;KACG,YAAY;AACjB,YAAU,iBAAU,SAAV,CAAoB,CAC5B,iBAAU,OAAV,CAAkB,iBAAU,IAAV,CADU,EAE5B,iBAAU,IAAV,CAFQ,CAAV;AAIA,QAAM,iBAAU,MAAV;AACN,iBAAe,iBAAU,MAAV;AACf,eAAa,iBAAU,OAAV;AACb,SAAO,iBAAU,MAAV,CAAiB,UAAjB;;kBA4CI","file":"Fold.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nclass Fold extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ]),\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconElement: PropTypes.element,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  onClick = () => this.setState({isOpen: !this.state.isOpen});\n\n  render() {\n    const { icon, iconClassName, title, iconElement } = this.props;\n    const titleIconClassName = classnames('material-icons icon', iconClassName);\n    const className = classnames({\n      'fold': true,\n      'fold--open': this.state.isOpen\n    });\n\n    let foldIcon;\n    if (icon) {\n      foldIcon = <i className={titleIconClassName}>{icon}</i>;\n    }\n    if (iconElement) {\n      foldIcon = iconElement;\n    }\n\n    return (\n      <div className={className}>\n        <div className=\"fold__title\" onClick={this.onClick}>\n          {foldIcon}\n          {title}\n          <i className=\"fold__indicator material-icons pull-right\">arrow_drop_down</i>\n        </div>\n        <div className=\"fold__content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fold;\n"]}