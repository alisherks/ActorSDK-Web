{"version":3,"sources":["../../../src/components/common/EmojiDropdown.react.js"],"names":[],"mappings":"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","file":"EmojiDropdown.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\nimport isInside from '../../utils/isInside';\nimport EmojiActionCreators from '../../actions/EmojiActionCreators'\n\nimport EmojiStore from '../../stores/EmojiStore'\n\nimport { Element, Link } from 'react-scroll';\n\nlet emojiTabs = [];\nlet emojis = [];\nlet closeTimer;\nconst CLOSE_TIMEOUT = 550;\n\nclass EmojiDropdown extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired\n  };\n\n  static getStores = () => [EmojiStore];\n\n  static calculateState() {\n    return {\n      isOpen: EmojiStore.isOpen()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    const emojiCategories = getEmojiCategories();\n\n    forEach(emojiCategories, (category, index) => {\n      let currentCategoryEmojis = [];\n\n      emoji.change_replace_mode('css');\n      const categoryIcon = emoji.replace_colons(category.icon);\n\n      emojiTabs.push(\n        <Link to={category.title}\n              spy\n              offset={30}\n              duration={300}\n              key={index}\n              onSetActive={() => this.changeDropdownTitle(category.title)}\n              containerId=\"emojiContainer\"\n              onMouseEnter={this.handleEmojiTabMouseEnter}\n              className=\"emoji-dropdown__header__tabs__tab\"\n              activeClass=\"emoji-dropdown__header__tabs__tab--active\">\n          <span dangerouslySetInnerHTML={{__html: categoryIcon}}/>\n        </Link>\n      );\n\n      forEach(category.data, (emojiChar, index) => {\n        emoji.change_replace_mode('css');\n        const convertedChar = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = true;\n        const emojiColon = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = false;\n\n        currentCategoryEmojis.push(\n          <a onClick={() => this.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{__html: convertedChar}}/>\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={index}>\n          <p>{category.title}</p>\n          {currentCategoryEmojis}\n        </Element>\n      );\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { isOpen } = nextState;\n    const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\n\n    if (isOpen) {\n      emojiDropdown.addEventListener('mouseenter', this.handleEmojiMouseEnter, false);\n      emojiDropdown.addEventListener('mouseleave', this.handleEmojiMouseLeave, false);\n      document.addEventListener('click', this.onDocumentClick, false);\n      document.addEventListener('keydown', this.onKeyDown, false);\n    } else {\n      emojiDropdown.removeEventListener('mouseenter', this.handleEmojiMouseEnter, false);\n      emojiDropdown.removeEventListener('mouseleave', this.handleEmojiMouseLeave, false);\n      document.removeEventListener('click', this.onDocumentClick, false);\n      document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n  }\n\n  onKeyDown = () => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleClose = () => EmojiActionCreators.close();\n\n  onSelect = (emoji) => this.props.onSelect(emoji);\n\n  onDocumentClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!event.target.className.includes('emoji-dropdown__header__tabs__tab')) {\n      const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\n      const emojiRect = emojiDropdown.getBoundingClientRect();\n      const coords = {\n        x: event.pageX || event.clientX,\n        y: event.pageY || event.clientY\n      };\n\n      if (!isInside(coords, emojiRect)) {\n        this.handleClose();\n      }\n    }\n  };\n\n  changeDropdownTitle = (title) => this.setState({dropdownTitle: title});\n\n  handleEmojiTabMouseEnter = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    event.target.click();\n  };\n\n  handleEmojiOpenerMouseEnter = () => {\n    this.handleEmojiMouseEnter();\n    localStorage.setItem('isEmojiOpenedBefore', true);\n    EmojiActionCreators.open();\n  };\n\n  handleEmojiMouseLeave = () => {\n    closeTimer = setTimeout(this.handleClose, CLOSE_TIMEOUT)\n  };\n\n  handleEmojiMouseEnter = () => {\n    clearTimeout(closeTimer);\n  };\n\n  render() {\n    const { isOpen, dropdownTitle } = this.state;\n    const isEmojiOpenedBefore = (localStorage.getItem('isEmojiOpenedBefore') === 'true') || false;\n\n    const emojiDropdownClassName = classnames('emoji-dropdown', {\n      'emoji-dropdown--opened': isOpen\n    });\n    const emojiOpenerClassName = classnames('emoji-opener material-icons', {\n      'emoji-opener--active': isOpen,\n      'emoji-opener--with-dot': !isEmojiOpenedBefore\n    });\n\n    return (\n      <div className={emojiDropdownClassName}>\n        <i className={emojiOpenerClassName}\n           onMouseEnter={this.handleEmojiOpenerMouseEnter}\n           onMouseLeave={this.handleEmojiMouseLeave}>insert_emoticon</i>\n\n\n        <div className=\"emoji-dropdown__wrapper\" ref=\"emojiDropdown\">\n          <header className=\"emoji-dropdown__header\">\n            <p className=\"emoji-dropdown__header__title\">{dropdownTitle || 'Emoji'}</p>\n\n            <div className=\"emoji-dropdown__header__tabs pull-right\">\n              {emojiTabs}\n            </div>\n          </header>\n          <div className=\"emoji-dropdown__body\" id=\"emojiContainer\">\n            {emojis}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(EmojiDropdown, {pure: false, withProps: true});\n"]}