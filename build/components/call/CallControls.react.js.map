{"version":3,"sources":["../../../src/components/call/CallControls.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM;;;;;;;;;yBAoBJ,2BAAS;iBACqB,KAAK,KAAL,CADrB;QACA,+BADA;QACY,qBADZ;;;AAGP,QAAM,oBAAoB,EAApB,CAHC;AAIP,QAAM,eAAe,QAAQ,iBAAR,GAA4B,EAA5B,CAJd;AAKP,YAAQ,KAAK,KAAL,CAAW,SAAX;AACN,WAAK,8BAAW,OAAX;AACH,YAAI,CAAC,UAAD,EAAa;AACf,uBAAa,IAAb,CAAkB,wDAAc,OAAO,KAAP,EAAc,SAAS,KAAK,KAAL,CAAW,QAAX,EAAqB,KAAI,QAAJ,EAA1D,CAAlB,EADe;SAAjB;;AAIA,qBAAa,IAAb,CACE,qDAAW,OAAO,KAAP,EAAc,SAAS,KAAK,KAAL,CAAW,KAAX,EAAkB,KAAI,KAAJ,EAApD,CADF,EALF;AAQE,cARF;AADF,WAUO,8BAAW,WAAX,CAVP;AAWE,WAAK,8BAAW,UAAX;AACH,YAAI,CAAC,KAAD,EAAQ;AACV,4BAAkB,IAAlB,CACE,4DAAkB,SAAS,KAAK,KAAL,CAAW,YAAX,EAAyB,KAAI,YAAJ,EAApD,CADF,EADU;SAAZ;;AAMA,0BAAkB,IAAlB,CACE,sDAAY,OAAO,KAAK,KAAL,CAAW,OAAX,EAAoB,UAAU,KAAK,KAAL,CAAW,YAAX,EAAyB,KAAI,MAAJ,EAA1E,CADF,EAPF;;AAWE,YAAI,CAAC,KAAD,EAAQ;AACV,4BAAkB,IAAlB,CACE,uDAAa,SAAS,KAAK,KAAL,CAAW,OAAX,EAAoB,KAAI,OAAJ,EAA1C,CADF,EAEE,yDAAe,SAAS,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAI,KAAJ,EAA9C,CAFF,EADU;SAAZ;;AAOA,qBAAa,IAAb,CACE,qDAAW,OAAO,KAAP,EAAc,SAAS,KAAK,KAAL,CAAW,KAAX,EAAkB,KAAI,KAAJ,EAApD,CADF,EAlBF;AAqBE,cArBF;AAXF,WAiCO,8BAAW,KAAX;AACH,qBAAa,IAAb,CAAkB,uDAAa,SAAS,KAAK,KAAL,CAAW,OAAX,EAAoB,KAAI,OAAJ,EAA1C,CAAlB,EADF;AAEE,cAFF;AAjCF,KALO;;AA2CP,QAAI,KAAJ,EAAW;AACT,aACE;;UAAK,WAAU,gBAAV,EAAL;QACE;;YAAK,WAAU,kCAAV,EAAL;UACG,iBADH;SADF;OADF,CADS;KAAX,CA3CO;;AAqDP,WACE;;QAAK,WAAU,gBAAV,EAAL;MACE;;UAAK,WAAU,kCAAV,EAAL;QACG,iBADH;OADF;MAIE;;UAAK,WAAU,yBAAV,EAAL;QACG,YADH;OAJF;KADF,CArDO;;;SApBL;;;aACG,YAAY;AACjB,aAAW,iBAAU,KAAV,CAAgB,CACzB,8BAAW,OAAX,EACA,8BAAW,WAAX,EACA,8BAAW,UAAX,EACA,8BAAW,KAAX,CAJS,EAKR,UALQ;AAMX,SAAO,iBAAU,IAAV;AACP,cAAY,iBAAU,IAAV,CAAe,UAAf;AACZ,WAAS,iBAAU,IAAV,CAAe,UAAf;AACT,SAAO,iBAAU,IAAV,CAAe,UAAf;AACP,YAAU,iBAAU,IAAV,CAAe,UAAf;AACV,gBAAc,iBAAU,IAAV,CAAe,UAAf;AACd,gBAAc,iBAAU,IAAV,CAAe,UAAf;AACd,aAAW,iBAAU,IAAV,CAAe,UAAf;AACX,WAAS,iBAAU,IAAV,CAAe,UAAf;AACT,WAAS,iBAAU,IAAV,CAAe,UAAf;;kBAqEE","file":"CallControls.react.js","sourcesContent":["/*\n* Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n*/\n\nimport React, {Component, PropTypes} from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { CallStates } from '../../constants/ActorAppConstants';\n\nimport AnswerButton from './AnswerButton.react';\nimport EndButton from './EndButton.react';\nimport MuteButton from './MuteButton.react';\nimport CloseButton from './CloseButton.react';\nimport FullScreenButton from './FullScreenButton.react';\nimport VideoButton from './VideoButton.react';\nimport AddUserButton from './AddUserButton.react';\n\nclass CallControls extends Component {\n  static propTypes = {\n    callState: PropTypes.oneOf([\n      CallStates.CALLING,\n      CallStates.IN_PROGRESS,\n      CallStates.CONNECTING,\n      CallStates.ENDED\n    ]).isRequired,\n    small: PropTypes.bool,\n    isOutgoing: PropTypes.bool.isRequired,\n    isMuted: PropTypes.bool.isRequired,\n    onEnd: PropTypes.func.isRequired,\n    onAnswer: PropTypes.func.isRequired,\n    onMuteToggle: PropTypes.func.isRequired,\n    onFullscreen: PropTypes.func.isRequired,\n    onUserAdd: PropTypes.func.isRequired,\n    onVideo: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {isOutgoing, small} = this.props;\n\n    const secondaryControls = [];\n    const mainControls = small ? secondaryControls : [];\n    switch (this.props.callState) {\n      case CallStates.CALLING:\n        if (!isOutgoing) {\n          mainControls.push(<AnswerButton small={small} onClick={this.props.onAnswer} key=\"answer\" />);\n        }\n\n        mainControls.push(\n          <EndButton small={small} onClick={this.props.onEnd} key=\"end\" />\n        );\n        break;\n      case CallStates.IN_PROGRESS:\n      case CallStates.CONNECTING:\n        if (!small) {\n          secondaryControls.push(\n            <FullScreenButton onClick={this.props.onFullscreen} key=\"fullscreen\" />\n          );\n        }\n\n        secondaryControls.push(\n          <MuteButton value={this.props.isMuted} onToggle={this.props.onMuteToggle} key=\"mute\" />\n        );\n\n        if (!small) {\n          secondaryControls.push(\n            <VideoButton onClick={this.props.onVideo} key=\"video\" />,\n            <AddUserButton onClick={this.props.onUserAdd} key=\"add\" />\n          );\n        }\n\n        mainControls.push(\n          <EndButton small={small} onClick={this.props.onEnd} key=\"end\" />\n        );\n        break;\n      case CallStates.ENDED:\n        mainControls.push(<CloseButton onClick={this.props.onClose} key=\"close\" />);\n        break;\n    }\n\n    if (small) {\n      return (\n        <div className=\"call__controls\">\n          <div className=\"call__controls__icons row top-xs\">\n            {secondaryControls}\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"call__controls\">\n        <div className=\"call__controls__icons row top-xs\">\n          {secondaryControls}\n        </div>\n        <div className=\"call__controls__buttons\">\n          {mainControls}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CallControls;\n"]}