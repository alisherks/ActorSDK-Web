{"version":3,"sources":["../../../src/components/activity/UserProfile.react.js"],"names":[],"mappings":"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","file":"UserProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { assign } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport { lightbox } from '../../utils/ImageUtils';\n\nimport ActorClient from '../../utils/ActorClient';\nimport confirm from '../../utils/confirm';\nimport { escapeWithEmoji } from '../../utils/EmojiUtils';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\nimport CallActionCreators from '../../actions/CallActionCreators';\n\nimport UserStore from '../../stores/UserStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport ContactDetails from '../common/ContactDetails.react';\nimport ToggleNotifications from '../common/ToggleNotifications.react';\nimport Fold from '../common/Fold.react';\n\nconst getStateFromStores = (uid) => {\n  const thisPeer = uid ? UserStore.getUser(uid) : null;\n  return {\n    thisPeer,\n    isNotificationsEnabled: thisPeer ? NotificationsStore.isNotificationsEnabled(thisPeer) : true,\n    message: OnlineStore.getMessage()\n  };\n};\n\nclass UserProfile extends Component {\n  static propTypes = {\n    user: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [NotificationsStore, OnlineStore];\n  }\n\n  static calculateState(prevState, nextProps) {\n    return getStateFromStores(nextProps.user.id);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMoreDropdownOpen: false,\n    }\n  }\n\n  addToContacts = () => ContactActionCreators.addContact(this.props.user.id);\n\n  removeFromContacts = () => {\n    const { user } = this.props;\n    confirm(<FormattedMessage id=\"modal.confirm.removeContact\" values={{name: user.name}}/>).then(\n      () => ContactActionCreators.removeContact(user.id),\n      () => {}\n    );\n  };\n\n  onNotificationChange = (event) => {\n    const { thisPeer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(thisPeer, event.target.checked);\n  };\n\n  toggleActionsDropdown = () => {\n    const { isActionsDropdownOpen } = this.state;\n\n    if (!isActionsDropdownOpen) {\n      this.setState({isActionsDropdownOpen: true});\n      document.addEventListener('click', this.closeActionsDropdown, false);\n    } else {\n      this.closeActionsDropdown();\n    }\n  };\n\n  closeActionsDropdown = () => {\n    this.setState({isActionsDropdownOpen: false});\n    document.removeEventListener('click', this.closeActionsDropdown, false);\n  };\n\n  clearChat = (uid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.clear']).then(\n      () => {\n        const peer = ActorClient.getUserPeer(uid);\n        DialogActionCreators.clearChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  deleteChat = (uid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.delete']).then(\n      () => {\n        const peer = ActorClient.getUserPeer(uid);\n        DialogActionCreators.deleteChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  handleAvatarClick = () => lightbox.open(this.props.user.bigAvatar);\n\n  makeCall = () => {\n    const { user } = this.props;\n    CallActionCreators.makeCall(user.id);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { intl } = this.context;\n    const { isNotificationsEnabled, isActionsDropdownOpen, message } = this.state;\n\n    const dropdownClassNames = classnames('dropdown', {\n      'dropdown--opened': isActionsDropdownOpen\n    });\n\n    return (\n      <div className=\"activity__body user_profile\">\n\n        <ul className=\"profile__list\">\n          <li className=\"profile__list__item user_profile__meta\">\n            <header>\n              <AvatarItem image={user.bigAvatar}\n                          placeholder={user.placeholder}\n                          size=\"large\"\n                          title={user.name}\n                          onClick={this.handleAvatarClick}/>\n\n              <h3 className=\"user_profile__meta__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(user.name)}}/>\n              <div className=\"user_profile__meta__message\">{message}</div>\n            </header>\n\n            {\n              user.about\n                ? <div className=\"user_profile__meta__about\"\n                       dangerouslySetInnerHTML={{__html: escapeWithEmoji(user.about).replace(/\\n/g, '<br/>')}}/>\n                : null\n            }\n\n            <footer className=\"row\">\n              <div className=\"col-xs\">\n                <button className=\"button button--green button--wide\" onClick={this.makeCall}>\n                  <i className=\"material-icons\">phone</i>\n                  {intl.messages['button.call']}\n                </button>\n              </div>\n              <div style={{width: 10}}/>\n              <div className=\"col-xs\">\n                <div className={dropdownClassNames}>\n                  <button className=\"dropdown__button button button--flat button--wide\" onClick={this.toggleActionsDropdown}>\n                    <i className=\"material-icons\">more_horiz</i>\n                    {intl.messages['actions']}\n                  </button>\n                  <ul className=\"dropdown__menu dropdown__menu--right\">\n                    {\n                      user.isContact\n                        ? <li className=\"dropdown__menu__item\" onClick={this.removeFromContacts}>\n                            {intl.messages['removeFromContacts']}\n                          </li>\n                        : <li className=\"dropdown__menu__item\" onClick={this.addToContacts}>\n                            {intl.messages['addToContacts']}\n                          </li>\n                    }\n                    <li className=\"dropdown__menu__item\" onClick={() => this.clearChat(user.id)}>\n                      {intl.messages['clearConversation']}\n                    </li>\n                    <li className=\"dropdown__menu__item\" onClick={() => this.deleteChat(user.id)}>\n                      {intl.messages['deleteConversation']}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </footer>\n          </li>\n\n          <li className=\"profile__list__item user_profile__contact_info no-p\">\n            <ContactDetails peerInfo={user}/>\n          </li>\n\n          <li className=\"profile__list__item user_profile__media no-p hide\">\n            <Fold icon=\"attach_file\" iconClassName=\"icon--gray\" title={intl.messages['sharedMedia']}>\n              <ul>\n                <li><a>230 Shared Photos and Videos</a></li>\n                <li><a>49 Shared Links</a></li>\n                <li><a>49 Shared Files</a></li>\n              </ul>\n            </Fold>\n          </li>\n\n          <li className=\"profile__list__item user_profile__notifications no-p\">\n            <ToggleNotifications isNotificationsEnabled={isNotificationsEnabled} onNotificationChange={this.onNotificationChange}/>\n          </li>\n\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(UserProfile, {pure:false, withProps: true});\n"]}