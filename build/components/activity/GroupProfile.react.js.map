{"version":3,"sources":["../../../src/components/activity/GroupProfile.react.js"],"names":[],"mappings":"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","file":"GroupProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { assign } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport { lightbox } from '../../utils/ImageUtils';\nimport { Container } from 'flux/utils';\nimport Scrollbar from '../common/Scrollbar.react';\n\nimport ActorClient from '../../utils/ActorClient';\nimport confirm from '../../utils/confirm'\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport InviteUserActions from '../../actions/InviteUserActions';\nimport EditGroupActionCreators from '../../actions/EditGroupActionCreators';\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\nimport CallActionCreators from '../../actions/CallActionCreators';\n\nimport DialogStore from '../../stores/DialogStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport GroupStore from '../../stores/GroupStore';\nimport UserStore from '../../stores/UserStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport GroupProfileMembers from '../activity/GroupProfileMembers.react';\nimport Fold from '../common/Fold.react';\nimport ToggleNotifications from '../common/ToggleNotifications.react';\n\nconst MAX_GROUP_CALL_SIZE = 25;\n\nconst getStateFromStores = (gid) => {\n  const thisPeer = gid ? GroupStore.getGroup(gid) : null;\n  return {\n    thisPeer,\n    // should not require to pass a peer\n    isNotificationsEnabled: thisPeer ? NotificationsStore.isNotificationsEnabled(thisPeer) : true,\n    integrationToken: GroupStore.getToken(),\n    message: OnlineStore.getMessage()\n  };\n};\n\nclass GroupProfile extends Component {\n  static propTypes = {\n    group: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [NotificationsStore, GroupStore, OnlineStore];\n  }\n\n  static calculateState(prevState, nextProps) {\n    return getStateFromStores(nextProps.group.id || null);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMoreDropdownOpen: false\n    }\n  }\n\n  onAddMemberClick = group => InviteUserActions.show(group);\n\n  onLeaveGroupClick = gid => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.leave']).then(\n      () => DialogActionCreators.leaveGroup(gid),\n      () => {}\n    );\n  };\n\n  onNotificationChange = event => {\n    const { thisPeer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(thisPeer, event.target.checked);\n  };\n\n  selectToken = (event) => event.target.select();\n\n  toggleMoreDropdown = () => {\n    const { isMoreDropdownOpen } = this.state;\n\n    if (!isMoreDropdownOpen) {\n      this.setState({isMoreDropdownOpen: true});\n      document.addEventListener('click', this.closeMoreDropdown, false);\n    } else {\n      this.closeMoreDropdown();\n    }\n  };\n\n  closeMoreDropdown = () => {\n    this.setState({isMoreDropdownOpen: false});\n    document.removeEventListener('click', this.closeMoreDropdown, false);\n  };\n\n  onClearGroupClick = (gid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.clear']).then(\n      () => {\n        const peer = ActorClient.getGroupPeer(gid);\n        DialogActionCreators.clearChat(peer)\n      },\n      () => {}\n    );\n  };\n\n  onDeleteGroupClick = (gid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.delete']).then(\n      () => {\n        const peer = ActorClient.getGroupPeer(gid);\n        DialogActionCreators.deleteChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  onEditGroupClick = (gid) => EditGroupActionCreators.show(gid);\n\n  handleAvatarClick = () => lightbox.open(this.props.group.bigAvatar);\n\n  makeCall = () => {\n    const { group } = this.props;\n    CallActionCreators.makeGroupCall(group.id);\n  };\n\n  render() {\n    const { group } = this.props;\n    const {\n      isNotificationsEnabled,\n      integrationToken,\n      isMoreDropdownOpen,\n      message\n    } = this.state;\n    const { intl } = this.context;\n\n    const myId = UserStore.getMyId();\n    const admin = UserStore.getUser(group.adminId);\n    const isMember = DialogStore.isMember();\n\n    const dropdownClassNames = classnames('dropdown', {\n      'dropdown--opened': isMoreDropdownOpen\n    });\n\n    const iconElement = (\n      <svg className=\"icon icon--green\"\n           dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#members\"/>'}}/>\n    );\n\n    const groupMeta = [\n      <header key={1}>\n        <AvatarItem image={group.bigAvatar}\n                    placeholder={group.placeholder}\n                    size=\"large\"\n                    title={group.name}\n                    onClick={this.handleAvatarClick}/>\n\n        <h3 className=\"group_profile__meta__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(group.name)}}/>\n        <div className=\"group_profile__meta__created\">\n          {intl.messages['createdBy']}\n          &nbsp;\n          <span dangerouslySetInnerHTML={{__html: escapeWithEmoji(admin.name)}}/>\n        </div>\n      </header>\n    ,\n      group.about ? (\n        <div className=\"group_profile__meta__description\" key={2}\n             dangerouslySetInnerHTML={{__html: escapeWithEmoji(group.about).replace(/\\n/g, '<br/>')}}/>\n      ) : null\n    ];\n\n    const token = (group.adminId === myId) ? (\n      <li className=\"profile__list__item group_profile__integration no-p\">\n        <Fold icon=\"power\" iconClassName=\"icon--pink\" title={intl.messages['integrationToken']}>\n          <div className=\"info info--light\">\n            <p>{intl.messages['integrationTokenHint']}</p>\n            <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\">{intl.messages['integrationTokenHelp']}</a>\n          </div>\n          <textarea className=\"textarea\" onClick={this.selectToken} readOnly row=\"3\" value={integrationToken}/>\n        </Fold>\n      </li>\n    ) : null;\n\n    if (isMember) {\n      return (\n        <div className=\"activity__body group_profile\">\n          <Scrollbar>\n            <ul className=\"profile__list\">\n              <li className=\"profile__list__item group_profile__meta\">\n                {groupMeta}\n                <footer className=\"row\">\n                  <div className=\"col-xs\">\n                    {\n                      group.members.length < MAX_GROUP_CALL_SIZE\n                        ? <button className=\"button button--green button--wide\" onClick={this.makeCall}>\n                            <i className=\"material-icons\">phone</i>\n                            {intl.messages['button.call']}\n                          </button>\n                        : <button className=\"button button--flat button--wide\"\n                                  onClick={() => this.onAddMemberClick(group)}>\n                            <i className=\"material-icons\">person_add</i>\n                            {intl.messages['addPeople']}\n                          </button>\n                    }\n                  </div>\n                  <div style={{width: 10}}/>\n                  <div className=\"col-xs\">\n                    <div className={dropdownClassNames}>\n                      <button className=\"dropdown__button button button--flat button--wide\"\n                              onClick={this.toggleMoreDropdown}>\n                        <i className=\"material-icons\">more_horiz</i>\n                        {intl.messages['more']}\n                      </button>\n                      <ul className=\"dropdown__menu dropdown__menu--right\">\n                        <li className=\"dropdown__menu__item\" onClick={() => this.onEditGroupClick(group.id)}>\n                          <i className=\"material-icons\">mode_edit</i>\n                          {intl.messages['editGroup']}\n                        </li>\n                        {\n                          group.members.length < MAX_GROUP_CALL_SIZE\n                            ? <li className=\"dropdown__menu__item\" onClick={() => this.onAddMemberClick(group)}>\n                                <i className=\"material-icons\">person_add</i>\n                                {intl.messages['addPeople']}\n                              </li>\n                            : null\n                        }\n                        <li className=\"dropdown__menu__item\"\n                            onClick={() => this.onLeaveGroupClick(group.id)}>\n                          {intl.messages['leaveGroup']}\n                        </li>\n                        <li className=\"dropdown__menu__item\"\n                            onClick={() => this.onClearGroupClick(group.id)}>\n                          {intl.messages['clearGroup']}\n                        </li>\n                        <li className=\"dropdown__menu__item\"\n                            onClick={() => this.onDeleteGroupClick(group.id)}>\n                          {intl.messages['deleteGroup']}\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </footer>\n              </li>\n\n              <li className=\"profile__list__item group_profile__media no-p hide\">\n                <Fold icon=\"attach_file\" iconClassName=\"icon--gray\" title={intl.messages['sharedMedia']}>\n                  <ul>\n                    <li><a>230 Shared Photos and Videos</a></li>\n                    <li><a>49 Shared Links</a></li>\n                    <li><a>49 Shared Files</a></li>\n                  </ul>\n                </Fold>\n              </li>\n\n              <li className=\"profile__list__item group_profile__notifications no-p\">\n                <ToggleNotifications isNotificationsEnabled={isNotificationsEnabled} onNotificationChange={this.onNotificationChange}/>\n              </li>\n\n              <li className=\"profile__list__item group_profile__members no-p\">\n                <Fold iconElement={iconElement}\n                      title={message}>\n                  <GroupProfileMembers groupId={group.id} members={group.members}/>\n                </Fold>\n              </li>\n\n              {token}\n            </ul>\n          </Scrollbar>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"activity__body group_profile\">\n          <ul className=\"profile__list\">\n            <li className=\"profile__list__item group_profile__meta\">\n              {groupMeta}\n            </li>\n          </ul>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Container.create(GroupProfile, {pure:false, withProps: true});\n"]}