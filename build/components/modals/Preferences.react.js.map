{"version":3,"sources":["../../../src/components/modals/Preferences.react.js"],"names":[],"mappings":"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","file":"Preferences.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\n\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport Session from './preferences/Session.react'\n\nclass PreferencesModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores = () => [PreferencesStore];\n\n  static calculateState() {\n    return {\n      isOpen: PreferencesStore.isOpen(),\n      isSendByEnterEnabled: PreferencesStore.isSendByEnterEnabled(),\n      isSoundEffectsEnabled: PreferencesStore.isSoundEffectsEnabled(),\n      isGroupsNotificationsEnabled: PreferencesStore.isGroupsNotificationsEnabled(),\n      isOnlyMentionNotifications: PreferencesStore.isOnlyMentionNotifications(),\n      isShowNotificationsTextEnabled: PreferencesStore.isShowNotificationsTextEnabled(),\n      sessions: PreferencesStore.getSessions(),\n      activeTab: PreferencesStore.getCurrentTab()\n    }\n  };\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  onClose = () => PreferencesActionCreators.hide();\n\n  onDone = () => {\n    const {\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    } = this.state;\n\n    PreferencesActionCreators.save({\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    });\n    this.onClose();\n  };\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  changeSendByEnter = (event) => this.setState({isSendByEnterEnabled: event.target.value === 'true'});\n  changeSoundEffectsEnabled = (event) => this.setState({isSoundEffectsEnabled: event.target.checked});\n  changeGroupsNotificationsEnabled = (event) => this.setState({isGroupsNotificationsEnabled: event.target.checked});\n  changeMentionNotifications = (event) => this.setState({isOnlyMentionNotifications: event.target.checked});\n  changeIsShowNotificationTextEnabled = (event) => this.setState({isShowNotificationsTextEnabled: event.target.checked});\n\n  onTerminateAllSessionsClick = () => PreferencesActionCreators.terminateAllSessions();\n\n  changeTab = (tab) => PreferencesActionCreators.changeTab(tab);\n\n  render() {\n    const {\n      isOpen,\n      activeTab,\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      sessions\n    } = this.state;\n    const { intl } = this.context;\n\n    const sessionList = map(sessions, (session) => <Session {...session}/>);\n\n    const generalTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'GENERAL'\n    });\n    const notificationTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'SECURITY'\n    });\n    const generalTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'GENERAL'\n    });\n    const notificationTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'SECURITY'\n    });\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 760\n      }\n    };\n\n    return (\n      <Modal className=\"modal-new modal-new--preferences\"\n             closeTimeoutMS={150}\n             isOpen={isOpen}\n             style={modalStyle}>\n\n        <div className=\"modal-new__header\">\n          <i className=\"modal-new__header__icon material-icons\">settings</i>\n          <h3 className=\"modal-new__header__title\">{intl.messages['preferencesModalTitle']}</h3>\n\n          <div className=\"pull-right\">\n            <button className=\"button button--lightblue\" onClick={this.onDone}>{intl.messages['button.done']}</button>\n          </div>\n        </div>\n\n        <div className=\"modal-new__body\">\n          <div className=\"preferences\">\n            <aside className=\"preferences__tabs\">\n              <a className={generalTabClassNames}\n                 onClick={() => this.changeTab('GENERAL')}>\n                {intl.messages['preferencesGeneralTab']}\n              </a>\n              <a className={notificationTabClassNames}\n                 onClick={() => this.changeTab('NOTIFICATIONS')}>\n                {intl.messages['preferencesNotificationsTab']}\n              </a>\n              <a className={securityTabClassNames}\n                 onClick={() => this.changeTab('SECURITY')}>\n                {intl.messages['preferencesSecurityTab']}\n              </a>\n            </aside>\n            <div className=\"preferences__body\">\n              <div className=\"preferences__list\">\n                <div className={generalTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">keyboard</i>\n                      <h4>{intl.messages['preferencesSendMessageTitle']}</h4>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterEnabled\"\n                               value=\"true\"\n                               defaultChecked={isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterEnabled\">\n                          <b>Enter</b> – {intl.messages['preferencesSendMessage']}, <b>Shift + Enter</b> – {intl.messages['preferencesNewLine']}\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterDisabled\"\n                               value=\"false\"\n                               defaultChecked={!isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterDisabled\">\n                          <b>Cmd + Enter</b> – {intl.messages['preferencesSendMessage']}, <b>Enter</b> – {intl.messages['preferencesNewLine']}\n                        </label>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className={notificationTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">music_note</i>\n                      <h4>{intl.messages['preferencesEffectsTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"soundEffects\"\n                               defaultChecked={isSoundEffectsEnabled}\n                               onChange={this.changeSoundEffectsEnabled}/>\n                        <label htmlFor=\"soundEffects\">\n                          {intl.messages['preferencesEnableEffects']}\n                        </label>\n                      </div>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">notifications</i>\n                      <h4>{intl.messages['preferencesNotificationsTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"groupNotifications\"\n                               defaultChecked={isGroupsNotificationsEnabled}\n                               onChange={this.changeGroupsNotificationsEnabled}/>\n                        <label htmlFor=\"groupNotifications\">\n                          {intl.messages['preferencesNotificationsGroup']}\n                        </label>\n                      </div>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"mentionsNotifications\"\n                               defaultChecked={isOnlyMentionNotifications}\n                               onChange={this.changeMentionNotifications}/>\n                        <label htmlFor=\"mentionsNotifications\">\n                          {intl.messages['preferencesNotificationsOnlyMention']}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{intl.messages['preferencesNotificationsOnlyMentionHint']}</p>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">visibility</i>\n                      <h4>{intl.messages['preferencesPrivacyTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"notificationTextPreview\"\n                               defaultChecked={isShowNotificationsTextEnabled}\n                               onChange={this.changeIsShowNotificationTextEnabled}/>\n                        <label htmlFor=\"notificationTextPreview\">\n                          {intl.messages['preferencesMessagePreview']}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{intl.messages['preferencesMessagePreviewHint']}</p>\n                    </li>\n                  </ul>\n                </div>\n                <div className={securityTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">devices</i>\n                      <h4>{intl.messages['preferencesSessionsTitle']}</h4>\n                      <ul className=\"session-list\">\n                        {sessionList}\n                        <li className=\"session-list__session\">\n                          <a className=\"link--red\" onClick={this.onTerminateAllSessionsClick}>\n                            {intl.messages['preferencesSessionsTerminateAll']}\n                          </a>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(PreferencesModal);\n"]}