{"version":3,"sources":["../../../src/components/modals/MyProfile.react.js"],"names":[],"mappings":"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","file":"MyProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport MyProfileActions from '../../actions/MyProfileActionCreators';\nimport CropAvatarActionCreators from '../../actions/CropAvatarActionCreators';\n\nimport MyProfileStore from '../../stores/MyProfileStore';\nimport CropAvatarStore from '../../stores/CropAvatarStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport CropAvatarModal from './CropAvatar.react';\n\nimport TextField from '../common/TextField.react';\n\nlet currentName = '',\n    currentNick = '',\n    currentAbout = '';\n\nclass MyProfile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [MyProfileStore, CropAvatarStore];\n\n  static calculateState() {\n    return {\n      profile: MyProfileStore.getProfile(),\n      name: MyProfileStore.getName(),\n      nick: MyProfileStore.getNick(),\n      about: MyProfileStore.getAbout(),\n      isOpen: MyProfileStore.isModalOpen(),\n      isCropModalOpen: CropAvatarStore.isOpen()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    const { name, nick, about } = this.state;\n\n    currentName = name;\n    currentNick = nick;\n    currentAbout = about;\n\n    this.setListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState.isOpen) {\n      if (nextState.isCropModalOpen) {\n        this.removeListeners();\n      } else {\n        this.setListeners();\n      }\n    }\n  }\n\n  setListeners = () => document.addEventListener('keydown', this.onKeyDown, false);\n  removeListeners = () => document.removeEventListener('keydown', this.onKeyDown, false);\n\n  handleClose = () => MyProfileActions.hide();\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleNameChange = event => this.setState({name: event.target.value});\n  handleNicknameChange = event => this.setState({nick: event.target.value});\n  handleAboutChange = event => this.setState({about: event.target.value});\n\n  isProfileChanged = () => {\n    const { name, nick, about } = this.state;\n    return name !== currentName || nick !== currentNick || about !== currentAbout\n  };\n\n  handleSave = () => {\n    const { nick, name, about } = this.state;\n\n    if (name !== currentName) MyProfileActions.saveName(name);\n    if (nick !== currentNick) MyProfileActions.saveNickname(nick);\n    if (about !== currentAbout) MyProfileActions.editMyAbout(about);\n\n    this.handleClose();\n  };\n\n  onProfilePictureInputChange = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    const imageForm = findDOMNode(this.refs.imageForm);\n    const file = imageInput.files[0];\n\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      CropAvatarActionCreators.show(event.target.result);\n      imageForm.reset();\n    };\n    reader.readAsDataURL(file);\n  };\n\n  handleChangeAvatarClick = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    imageInput.click()\n  };\n\n  onProfilePictureRemove = () => MyProfileActions.removeMyAvatar();\n\n  changeMyAvatar = (croppedImage) => MyProfileActions.changeMyAvatar(croppedImage);\n\n  render() {\n    const { isOpen, isCropModalOpen, profile, nick, name, about } = this.state;\n    const { intl } = this.context;\n    const isProfileChanged = this.isProfileChanged();\n\n    const cropAvatar = isCropModalOpen ? <CropAvatarModal onCropFinish={this.changeMyAvatar}/> : null;\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 440\n      }\n    };\n\n    if (profile !== null && isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--profile\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={modalStyle}>\n\n          <header className=\"modal-new__header\">\n            <a className=\"modal-new__header__icon material-icons\">person</a>\n            <h3 className=\"modal-new__header__title\">{intl.messages['modal.profile.title']}</h3>\n            <div className=\"pull-right\">\n              {\n                isProfileChanged\n                  ? <button className=\"button button--lightblue\" onClick={this.handleSave}>{intl.messages['button.save']}</button>\n                  : <button className=\"button\" onClick={this.handleClose}>{intl.messages['button.close']}</button>\n              }\n            </div>\n          </header>\n          <div className=\"modal-new__body row\">\n            <div className=\"col-xs\">\n              <div className=\"name\">\n                <TextField className=\"input__material--wide\"\n                           floatingLabel={intl.messages['modal.profile.name']}\n                           onChange={this.handleNameChange}\n                           type=\"text\"\n                           value={name}/>\n              </div>\n              <div className=\"nick\">\n                <TextField className=\"input__material--wide\"\n                           floatingLabel={intl.messages['modal.profile.nick']}\n                           onChange={this.handleNicknameChange}\n                           type=\"text\"\n                           value={nick}/>\n              </div>\n              {\n                profile.phones[0]\n                  ? <div className=\"phone\">\n                      <TextField className=\"input__material--wide\"\n                                 floatingLabel={intl.messages['modal.profile.phone']}\n                                 disabled\n                                 type=\"tel\"\n                                 value={(profile.phones[0] || {}).number}/>\n                    </div>\n                  : null\n              }\n              {\n                profile.emails[0]\n                  ? <div className=\"phone\">\n                      <TextField className=\"input__material--wide\"\n                                 floatingLabel={intl.messages['modal.profile.email']}\n                                 disabled\n                                 type=\"email\"\n                                 value={(profile.emails[0] || {}).email}/>\n                    </div>\n                  : null\n              }\n              <div className=\"about\">\n                <label htmlFor=\"about\">{intl.messages['modal.profile.about']}</label>\n                <textarea className=\"textarea\"\n                          id=\"about\"\n                          onChange={this.handleAboutChange}\n                          value={about}/>\n              </div>\n            </div>\n            <div className=\"profile-picture text-center\">\n              <div className=\"profile-picture__changer\">\n                <AvatarItem image={profile.bigAvatar}\n                            placeholder={profile.placeholder}\n                            size=\"big\"\n                            title={profile.name}/>\n                <a onClick={this.handleChangeAvatarClick}>\n                  <span>{intl.messages['modal.profile.avatarChange']}</span>\n                </a>\n              </div>\n              {\n                profile.bigAvatar\n                  ? <div className=\"profile-picture__controls\">\n                      <a onClick={this.onProfilePictureRemove}>{intl.messages['modal.profile.avatarRemove']}</a>\n                    </div>\n                  : null\n              }\n              <form className=\"hide\" ref=\"imageForm\">\n                <input onChange={this.onProfilePictureInputChange} ref=\"imageInput\" type=\"file\"/>\n              </form>\n            </div>\n          </div>\n\n          {cropAvatar}\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(MyProfile, {pure: false});\n"]}