{"version":3,"sources":["../../../src/components/modals/CropAvatar.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;AAEA;;;;AAEA;;AAEA;;;;AAEA;;;;;;;;;;;;;;AAEA,IAAM,cAAc,GAAd;;IAEA;;;AACJ,WADI,eACJ,CAAY,KAAZ,EAAmB;0BADf,iBACe;;iDACjB,sBAAM,KAAN,GADiB;;UA2CnB,UAAU;aAAM,mCAAyB,IAAzB;KAAN,CA3CS;;UA6CnB,YAAY,UAAC,KAAD,EAAW;AACrB,UAAI,MAAM,OAAN,KAAkB,4BAAS,GAAT,EAAc;AAClC,cAAM,cAAN,GADkC;AAElC,cAAK,OAAL,GAFkC;OAApC;KADU,CA7CO;;UAoDnB,gBAAgB,UAAC,KAAD,EAAW;UACjB,eAAiB,MAAK,KAAL,CAAjB,aADiB;;;AAGzB,YAAM,cAAN,GAHyB;;AAKzB,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CALmB;AAMzB,UAAM,cAAc,QAAQ,qBAAR,EAAd,CANmB;;AAQzB,UAAM,aAAa;AACjB,WAAG,KAAC,CAAM,KAAN,GAAc,YAAY,IAAZ,GAAoB,aAAa,CAAb;AACtC,WAAG,KAAC,CAAM,KAAN,GAAc,YAAY,GAAZ,GAAmB,aAAa,CAAb;OAFjC,CARmB;AAYzB,YAAK,QAAL,CAAc,EAAC,sBAAD,EAAd,EAZyB;;AAczB,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,QAAL,CAAtC,CAdyB;AAezB,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,QAAL,CAAtC,CAfyB;KAAX,CApDG;;UAqEnB,WAAW,UAAC,KAAD,EAAW;wBACa,MAAK,KAAL,CADb;UACZ,oCADY;UACA,gCADA;;AAEpB,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CAFc;AAGpB,UAAM,cAAc,QAAQ,qBAAR,EAAd,CAHc;;AAKpB,UAAI,eAAe;AACjB,WAAG,KAAC,CAAM,KAAN,GAAc,YAAY,IAAZ,GAAoB,WAAW,CAAX;AACtC,WAAG,KAAC,CAAM,KAAN,GAAc,YAAY,GAAZ,GAAmB,WAAW,CAAX;OAFnC,CALgB;;AAUpB,UAAI,aAAa,CAAb,GAAiB,CAAjB,EAAoB;AACtB,qBAAa,CAAb,GAAiB,CAAjB,CADsB;OAAxB,MAEO,IAAI,aAAa,CAAb,GAAiB,YAAY,KAAZ,GAAoB,QAApB,EAA8B;AACxD,qBAAa,CAAb,GAAiB,YAAY,KAAZ,GAAoB,QAApB,CADuC;OAAnD;;AAIP,UAAI,aAAa,CAAb,GAAiB,CAAjB,EAAoB;AACtB,qBAAa,CAAb,GAAiB,CAAjB,CADsB;OAAxB,MAEO,IAAI,aAAa,CAAb,GAAiB,YAAY,MAAZ,GAAqB,QAArB,EAA+B;AACzD,qBAAa,CAAb,GAAiB,YAAY,MAAZ,GAAqB,QAArB,CADwC;OAApD;;AAIP,YAAK,QAAL,CAAc,EAAC,0BAAD,EAAd,EAtBoB;KAAX,CArEQ;;UA8FnB,mBAAmB,UAAC,KAAD,EAAW;AAC5B,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CADsB;AAE5B,UAAM,kBAAkB,MAAM,KAAN,CAFI;AAG5B,YAAM,cAAN,GAH4B;AAI5B,YAAK,QAAL,CAAc,EAAC,gCAAD,EAAd,EAJ4B;AAK5B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,WAAL,CAAtC,CAL4B;AAM5B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,WAAL,CAAtC,CAN4B;KAAX,CA9FA;;UAuGnB,qBAAqB,UAAC,KAAD,EAAW;AAC9B,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CADwB;AAE9B,UAAM,kBAAkB,MAAM,KAAN,CAFM;AAG9B,YAAM,cAAN,GAH8B;AAI9B,YAAK,QAAL,CAAc,EAAC,gCAAD,EAAd,EAJ8B;AAK9B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,aAAL,CAAtC,CAL8B;AAM9B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,aAAL,CAAtC,CAN8B;KAAX,CAvGF;;UAgHnB,sBAAsB,UAAC,KAAD,EAAW;AAC/B,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CADyB;AAE/B,UAAM,kBAAkB,MAAM,KAAN,CAFO;AAG/B,YAAM,cAAN,GAH+B;AAI/B,YAAK,QAAL,CAAc,EAAC,gCAAD,EAAd,EAJ+B;AAK/B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,cAAL,CAAtC,CAL+B;AAM/B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,cAAL,CAAtC,CAN+B;KAAX,CAhHH;;UAyHnB,oBAAoB,UAAC,KAAD,EAAW;AAC7B,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CADuB;AAE7B,UAAM,kBAAkB,MAAM,KAAN,CAFK;AAG7B,YAAM,cAAN,GAH6B;AAI7B,YAAK,QAAL,CAAc,EAAC,gCAAD,EAAd,EAJ6B;AAK7B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,YAAL,CAAtC,CAL6B;AAM7B,cAAQ,gBAAR,CAAyB,WAAzB,EAAsC,MAAK,YAAL,CAAtC,CAN6B;KAAX,CAzHD;;UAkInB,cAAc,UAAC,KAAD;aAAW,MAAK,YAAL,CAAkB,KAAlB,EAAyB,KAAzB;KAAX,CAlIK;;UAmInB,gBAAgB,UAAC,KAAD;aAAW,MAAK,YAAL,CAAkB,KAAlB,EAAyB,OAAzB;KAAX,CAnIG;;UAoInB,iBAAiB,UAAC,KAAD;aAAW,MAAK,YAAL,CAAkB,KAAlB,EAAyB,QAAzB;KAAX,CApIE;;UAqInB,eAAe,UAAC,KAAD;aAAW,MAAK,YAAL,CAAkB,KAAlB,EAAyB,MAAzB;KAAX,CArII;;UAuInB,eAAe,UAAC,KAAD,EAAQ,SAAR,EAAsB;yBAC4C,MAAK,KAAL,CAD5C;UAC3B,yCAD2B;UACb,+CADa;UACI,iCADJ;UACc,uCADd;UAC2B,yCAD3B;;AAEnC,UAAM,YAAY,SAAC,KAAc,OAAd,IAAyB,cAAc,MAAd,GAAwB,MAAM,KAAN,GAAc,MAAM,KAAN,CAF/C;AAGnC,UAAM,cAAc,kBAAkB,SAAlB,CAHe;;AAKnC,UAAI,2BAAJ;UAAwB,wBAAxB,CALmC;AAMnC,cAAQ,SAAR;AACE,aAAK,KAAL;AACE,4BAAkB,WAAW,WAAX,CADpB;AAEE,+BAAqB;AACnB,eAAG,aAAa,CAAb,GAAkB,cAAc,CAAd;AACrB,eAAG,aAAa,CAAb,GAAiB,WAAjB;WAFL,CAFF;AAME,gBANF;AADF,aAQO,OAAL;AACE,4BAAkB,WAAW,WAAX,CADpB;AAEE,+BAAqB;AACnB,eAAG,aAAa,CAAb;AACH,eAAG,aAAa,CAAb,GAAkB,cAAc,CAAd;WAFvB,CAFF;AAME,gBANF;AARF,aAeO,QAAL;AACE,4BAAkB,WAAW,WAAX,CADpB;AAEE,+BAAqB;AACnB,eAAG,aAAa,CAAb,GAAkB,cAAc,CAAd;AACrB,eAAG,aAAa,CAAb;WAFL,CAFF;AAME,gBANF;AAfF,aAsBO,MAAL;AACE,4BAAkB,WAAW,WAAX,CADpB;AAEE,+BAAqB;AACnB,eAAG,aAAa,CAAb,GAAiB,WAAjB;AACH,eAAG,aAAa,CAAb,GAAkB,cAAc,CAAd;WAFvB,CAFF;AAME,gBANF;AAtBF;OANmC;;AAsCnC,UAAI,kBAAkB,WAAlB,IAAiC,kBAAkB,WAAlB,IAAiC,kBAAkB,YAAlB,EAAgC;AACpG,0BAAkB,QAAlB,CADoG;AAEpG,6BAAqB,YAArB,CAFoG;OAAtG;;AAKA,YAAK,QAAL,CAAc,EAAC,iBAAiB,SAAjB,EAAf,EA3CmC;AA4CnC,YAAK,cAAL,CAAoB,eAApB,EAAqC,kBAArC,EA5CmC;KAAtB,CAvII;;UAsLnB,kBAAkB,YAAM;AACtB,UAAM,UAAU,2BAAY,MAAK,IAAL,CAAU,OAAV,CAAtB,CADgB;;AAGtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,QAAL,CAAzC,CAHsB;AAItB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,QAAL,CAAzC,CAJsB;AAKtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,WAAL,CAAzC,CALsB;AAMtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,WAAL,CAAzC,CANsB;AAOtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,aAAL,CAAzC,CAPsB;AAQtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,aAAL,CAAzC,CARsB;AAStB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,cAAL,CAAzC,CATsB;AAUtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,cAAL,CAAzC,CAVsB;AAWtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,YAAL,CAAzC,CAXsB;AAYtB,cAAQ,mBAAR,CAA4B,WAA5B,EAAyC,MAAK,YAAL,CAAzC,CAZsB;KAAN,CAtLC;;UAqMnB,iBAAiB,UAAC,QAAD,EAAW,YAAX;aAA4B,MAAK,QAAL,CAAc,EAAC,kBAAD,EAAW,0BAAX,EAAd;KAA5B,CArME;;UAuMnB,SAAS,YAAM;yBACkC,MAAK,KAAL,CADlC;UACL,yCADK;UACS,iCADT;UACmB,qCADnB;UAEL,eAAiB,MAAK,KAAL,CAAjB,aAFK;;AAGb,UAAM,YAAY,2BAAY,MAAK,IAAL,CAAU,SAAV,CAAxB,CAHO;AAIb,UAAI,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAT,CAJS;AAKb,UAAI,UAAU,OAAO,UAAP,CAAkB,IAAlB,CAAV,CALS;;AAOb,aAAO,KAAP,GAAe,OAAO,MAAP,GAAgB,QAAhB,CAPF;;AASb,cAAQ,SAAR,CAAkB,SAAlB,EAA6B,aAAa,CAAb,GAAiB,UAAjB,EAA6B,aAAa,CAAb,GAAiB,UAAjB,EAA6B,WAAW,UAAX,EAAuB,WAAW,UAAX,EAAuB,CAArI,EAAwI,CAAxI,EAA2I,QAA3I,EAAqJ,QAArJ,EATa;;AAWb,UAAM,eAAe,+BAAc,OAAO,SAAP,EAAd,CAAf,CAXO;;AAab,mBAAa,YAAb,EAba;AAcb,YAAK,OAAL,GAda;KAAN,CAvMU;;UAwNnB,mBAAmB,UAAC,KAAD,EAAW;UACpB,WAAa,MAAK,KAAL,CAAb,SADoB;;AAE5B,UAAM,gBAAgB,2BAAY,MAAK,IAAL,CAAU,aAAV,CAA5B,CAFsB;AAG5B,UAAM,cAAc,cAAc,KAAd,CAHQ;AAI5B,UAAM,eAAe,cAAc,MAAd,CAJO;AAK5B,UAAM,eAAe,cAAc,YAAd,CALO;AAM5B,UAAM,gBAAgB,cAAc,aAAd,CANM;AAO5B,UAAM,aAAa,cAAY,YAAZ,CAPS;AAQ5B,UAAM,eAAe;AACnB,WAAG,CAAC,YAAC,GAAe,CAAf,GAAqB,WAAW,CAAX,CAAvB,GAAwC,UAAxC;AACH,WAAG,CAAC,aAAC,GAAgB,CAAhB,GAAsB,WAAW,CAAX,CAAxB,GAAyC,UAAzC;OAFC,CARsB;;AAa5B,YAAK,QAAL,CAAc,EAAC,0BAAD,EAAe,wBAAf,EAA4B,0BAA5B,EAA0C,0BAA1C,EAAwD,4BAAxD,EAAuE,sBAAvE,EAAd,EAb4B;KAAX,CAxNA;;;GAAnB;;AADI,kBAWG,2CAAiB;AACtB,WAAO;AACL,cAAQ,0BAAgB,MAAhB,EAAR;AACA,qBAAe,0BAAgB,gBAAhB,EAAf;AACA,oBAAc;AACZ,WAAG,CAAH;AACA,WAAG,CAAH;OAFF;AAIA,gBAAU,GAAV;AACA,mBAAa,CAAb;AACA,oBAAc,CAAd;AACA,oBAAc,CAAd;AACA,qBAAe,CAAf;AACA,sBAAgB,QAAC,CAAS,IAAT,CAAc,YAAd,GAA6B,EAA7B,GAAmC,EAApC;AAZX,KAAP,CADsB;;;AAXpB,4BAgCJ,iDAAoB;AAClB,QAAM,gBAAgB,2BAAY,KAAK,IAAL,CAAU,aAAV,CAA5B,CADY;AAElB,aAAS,gBAAT,CAA0B,SAA1B,EAAqC,KAAK,SAAL,EAAgB,KAArD,EAFkB;AAGlB,WAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,gBAAL,EAAuB,KAAzD,EAHkB;AAIlB,kBAAc,gBAAd,CAA+B,MAA/B,EAAuC,KAAK,gBAAL,EAAuB,KAA9D,EAJkB;;;AAhChB,4BAuCJ,uDAAuB;AACrB,aAAS,mBAAT,CAA6B,SAA7B,EAAwC,KAAK,SAAL,EAAgB,KAAxD,EADqB;AAErB,WAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,gBAAL,EAAuB,KAA5D,EAFqB;;;AAvCnB,4BAyOJ,2BAAS;iBAC8F,KAAK,KAAL,CAD9F;QACC,uBADD;QACS,qCADT;QACwB,mCADxB;QACsC,2BADtC;QACgD,iCADhD;QAC6D,mCAD7D;QAC2E,uCAD3E;QAEC,OAAS,KAAK,OAAL,CAAT,KAFD;;AAGP,QAAM,aAAa;AACjB,eAAU;AACR,kBAAU,IAAV;AACA,aAAK,IAAL;AACA,cAAM,IAAN;AACA,eAAO,IAAP;AACA,gBAAQ,IAAR;AACA,gBAAQ,IAAR;AACA,oBAAY,IAAZ;AACA,kBAAU,IAAV;AACA,iBAAS,IAAT;AACA,iBAAS,IAAT;AACA,sBAAc,IAAd;OAXF;KADI,CAHC;;AAmBP,QAAI,MAAJ,EAAY;AACV,aACE;;UAAO,WAAU,sCAAV;AACA,0BAAgB,GAAhB;AACA,kBAAQ,MAAR;AACA,iBAAO,UAAP,EAHP;QAKE;;YAAK,WAAU,mBAAV,EAAL;UACE;;cAAG,WAAU,wCAAV,EAAH;;WADF;UAEE;;cAAI,WAAU,0BAAV,EAAJ;YAA0C,KAAK,QAAL,CAAc,kBAAd,CAA1C;WAFF;UAGE;;cAAK,WAAU,YAAV,EAAL;YACE;;gBAAQ,WAAU,0BAAV,EAAqC,SAAS,KAAK,MAAL,EAAtD;cAAoE,KAAK,QAAL,CAAc,aAAd,CAApE;aADF;WAHF;SALF;QAaE;;YAAK,WAAU,iBAAV,EAAL;UACE;;cAAK,WAAU,cAAV;AACA,mBAAI,SAAJ;AACA,0BAAY,KAAK,eAAL;AACZ,yBAAW,KAAK,eAAL,EAHhB;YAIE;;gBAAK,WAAU,qBAAV;AACA,uBAAO,EAAC,OAAO,QAAP,EAAiB,QAAQ,QAAR,EAAkB,MAAM,aAAa,CAAb,EAAgB,KAAK,aAAa,CAAb,EAAtE,EADL;cAEE,uCAAK,WAAU,gEAAV;AACA,6BAAa,KAAK,gBAAL;AACb,8BAAc,KAAK,gBAAL,EAFnB,CAFF;cAKE,uCAAK,WAAU,kEAAV;AACA,6BAAa,KAAK,kBAAL;AACb,8BAAc,KAAK,kBAAL,EAFnB,CALF;cAQE,uCAAK,WAAU,mEAAV;AACA,6BAAa,KAAK,mBAAL;AACb,8BAAc,KAAK,mBAAL,EAFnB,CARF;cAWE,uCAAK,WAAU,iEAAV;AACA,6BAAa,KAAK,iBAAL;AACb,8BAAc,KAAK,iBAAL,EAFnB,CAXF;aAJF;YAmBE;;gBAAK,WAAU,uBAAV;AACA,6BAAa,KAAK,aAAL;AACb,8BAAc,KAAK,aAAL;AACd,uBAAO,EAAE,OAAO,QAAP,EAAiB,QAAQ,QAAR,EAAkB,MAAM,aAAa,CAAb,EAAgB,KAAK,aAAa,CAAb,EAAvE,EAHL;cAIE,uCAAK,WAAU,0BAAV;AACA,2BAAU,OAAV;AACA,qBAAI,WAAJ;AACA,qBAAK,aAAL;AACA,uBAAO,EAAC,MAAM,CAAC,aAAa,CAAb,EAAgB,KAAK,CAAC,aAAa,CAAb,EAAgB,OAAO,WAAP,EAAoB,QAAQ,YAAR,EAAzE,EAJL,CAJF;aAnBF;YA6BE,uCAAK,WAAU,8BAAV;AACA,yBAAU,OAAV;AACA,mBAAI,eAAJ;AACA,mBAAK,aAAL;AACA,qBAAO,EAAC,WAAW,cAAX,EAAR,EAJL,CA7BF;WADF;SAbF;OADF,CADU;KAAZ,MAsDO;AACL,aAAO,IAAP,CADK;KAtDP;;;SA5PE;;;gBAKG,YAAY;AACjB,gBAAc,iBAAU,IAAV,CAAe,UAAf;;;AANZ,gBASG,YAAY;SAAM;CAAN;;AATf,gBA4BG,eAAe;AACpB,QAAM,iBAAU,MAAV;;kBA2RK,iBAAU,MAAV,CAAiB,eAAjB","file":"CropAvatar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { dataURItoBlob } from '../../utils/ImageUtils';\n\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport CropAvatarActionCreators from '../../actions/CropAvatarActionCreators';\n\nimport CropAvatarStore from '../../stores/CropAvatarStore'\n\nconst minCropSize = 100;\n\nclass CropAvatarModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    onCropFinish: PropTypes.func.isRequired\n  };\n\n  static getStores = () => [CropAvatarStore];\n\n  static calculateState() {\n    return {\n      isOpen: CropAvatarStore.isOpen(),\n      pictureSource: CropAvatarStore.getPictureSource(),\n      cropPosition: {\n        x: 0,\n        y: 0\n      },\n      cropSize: 200,\n      scaledWidth: 0,\n      scaledHeight: 0,\n      naturalWidth: 0,\n      naturalHeight: 0,\n      maxImageHeight: (document.body.clientHeight * .9) - 64 // 64 is modal header height.\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentDidMount() {\n    const originalImage = findDOMNode(this.refs.originalImage);\n    document.addEventListener('keydown', this.onKeyDown, false);\n    window.addEventListener('resize', this.storeScaledSizes, false);\n    originalImage.addEventListener('load', this.storeScaledSizes, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n    window.removeEventListener('resize', this.storeScaledSizes, false);\n  }\n\n  onClose = () => CropAvatarActionCreators.hide();\n\n  onKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  onStartMoving = (event) => {\n    const { cropPosition } = this.state;\n\n    event.preventDefault();\n\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    const dragOffset = {\n      x: (event.pageX - wrapperRect.left) - cropPosition.x,\n      y: (event.pageY - wrapperRect.top) - cropPosition.y\n    };\n    this.setState({dragOffset});\n\n    wrapper.addEventListener('mousemove', this.onMoving);\n    wrapper.addEventListener('touchmove', this.onMoving);\n  };\n  onMoving = (event) => {\n    const { dragOffset, cropSize } = this.state;\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    let cropPosition = {\n      x: (event.pageX - wrapperRect.left) - dragOffset.x,\n      y: (event.pageY - wrapperRect.top) - dragOffset.y\n    };\n\n    if (cropPosition.x < 0) {\n      cropPosition.x = 0;\n    } else if (cropPosition.x > wrapperRect.width - cropSize) {\n      cropPosition.x = wrapperRect.width - cropSize;\n    }\n\n    if (cropPosition.y < 0) {\n      cropPosition.y = 0;\n    } else if (cropPosition.y > wrapperRect.height - cropSize) {\n      cropPosition.y = wrapperRect.height - cropSize;\n    }\n\n    this.setState({cropPosition})\n  };\n\n  onStartResizeTop = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageY;\n    event.preventDefault();\n    this.setState({resizeLastCoord});\n    wrapper.addEventListener('mousemove', this.onResizeTop);\n    wrapper.addEventListener('touchmove', this.onResizeTop);\n  };\n\n  onStartResizeRight = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageX;\n    event.preventDefault();\n    this.setState({resizeLastCoord});\n    wrapper.addEventListener('mousemove', this.onResizeRight);\n    wrapper.addEventListener('touchmove', this.onResizeRight);\n  };\n\n  onStartResizeBottom = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageY;\n    event.preventDefault();\n    this.setState({resizeLastCoord});\n    wrapper.addEventListener('mousemove', this.onResizeBottom);\n    wrapper.addEventListener('touchmove', this.onResizeBottom);\n  };\n\n  onStartResizeLeft = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageX;\n    event.preventDefault();\n    this.setState({resizeLastCoord});\n    wrapper.addEventListener('mousemove', this.onResizeLeft);\n    wrapper.addEventListener('touchmove', this.onResizeLeft);\n  };\n\n  onResizeTop = (event) => this.onCropResize(event, 'TOP');\n  onResizeRight = (event) => this.onCropResize(event, 'RIGHT');\n  onResizeBottom = (event) => this.onCropResize(event, 'BOTTOM');\n  onResizeLeft = (event) => this.onCropResize(event, 'LEFT');\n\n  onCropResize = (event, direction) => {\n    const { cropPosition, resizeLastCoord, cropSize, scaledWidth, scaledHeight } = this.state;\n    const axisCoord = (direction === 'RIGHT' || direction === 'LEFT') ? event.pageX : event.pageY;\n    const resizeValue = resizeLastCoord - axisCoord;\n\n    let resizeCropPosition, resizedCropSize;\n    switch (direction) {\n      case 'TOP':\n        resizedCropSize = cropSize + resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x - (resizeValue / 2),\n          y: cropPosition.y - resizeValue\n        };\n        break;\n      case 'RIGHT':\n        resizedCropSize = cropSize - resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x,\n          y: cropPosition.y + (resizeValue / 2)\n        };\n        break;\n      case 'BOTTOM':\n        resizedCropSize = cropSize - resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x + (resizeValue / 2),\n          y: cropPosition.y\n        };\n        break;\n      case 'LEFT':\n        resizedCropSize = cropSize + resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x - resizeValue,\n          y: cropPosition.y - (resizeValue / 2)\n        };\n        break;\n      default:\n    }\n\n    if (resizedCropSize < minCropSize || resizedCropSize > scaledWidth || resizedCropSize > scaledHeight) {\n      resizedCropSize = cropSize;\n      resizeCropPosition = cropPosition;\n    }\n\n    this.setState({resizeLastCoord: axisCoord});\n    this.updateCropSize(resizedCropSize, resizeCropPosition);\n  };\n\n  removeListeners = () => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n\n    wrapper.removeEventListener('mousemove', this.onMoving);\n    wrapper.removeEventListener('touchmove', this.onMoving);\n    wrapper.removeEventListener('mousemove', this.onResizeTop);\n    wrapper.removeEventListener('touchmove', this.onResizeTop);\n    wrapper.removeEventListener('mousemove', this.onResizeRight);\n    wrapper.removeEventListener('touchmove', this.onResizeRight);\n    wrapper.removeEventListener('mousemove', this.onResizeBottom);\n    wrapper.removeEventListener('touchmove', this.onResizeBottom);\n    wrapper.removeEventListener('mousemove', this.onResizeLeft);\n    wrapper.removeEventListener('touchmove', this.onResizeLeft);\n  };\n\n  updateCropSize = (cropSize, cropPosition) => this.setState({cropSize, cropPosition});\n\n  onCrop = () => {\n    const { cropPosition, cropSize, scaleRatio } = this.state;\n    const { onCropFinish } = this.props;\n    const cropImage = findDOMNode(this.refs.cropImage);\n    let canvas = document.createElement('canvas');\n    let context = canvas.getContext('2d');\n\n    canvas.width = canvas.height = cropSize;\n\n    context.drawImage(cropImage, cropPosition.x / scaleRatio, cropPosition.y / scaleRatio, cropSize / scaleRatio, cropSize / scaleRatio, 0, 0, cropSize, cropSize);\n\n    const croppedImage = dataURItoBlob(canvas.toDataURL());\n\n    onCropFinish(croppedImage);\n    this.onClose();\n  };\n\n  storeScaledSizes = (event) => {\n    const { cropSize } = this.state;\n    const originalImage = findDOMNode(this.refs.originalImage);\n    const scaledWidth = originalImage.width;\n    const scaledHeight = originalImage.height;\n    const naturalWidth = originalImage.naturalWidth;\n    const naturalHeight = originalImage.naturalHeight;\n    const scaleRatio = scaledWidth/naturalWidth;\n    const cropPosition = {\n      x: ((naturalWidth / 2) - (cropSize / 2)) * scaleRatio,\n      y: ((naturalHeight / 2) - (cropSize / 2)) * scaleRatio\n    };\n\n    this.setState({cropPosition, scaledWidth, scaledHeight, naturalWidth, naturalHeight, scaleRatio});\n  };\n\n  render() {\n    const { isOpen, pictureSource, cropPosition, cropSize, scaledWidth, scaledHeight, maxImageHeight } = this.state;\n    const { intl } = this.context;\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null\n      }\n    };\n\n    if (isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--profile-picture\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={modalStyle}>\n\n          <div className=\"modal-new__header\">\n            <i className=\"modal-new__header__icon material-icons\">crop</i>\n            <h3 className=\"modal-new__header__title\">{intl.messages['modal.crop.title']}</h3>\n            <div className=\"pull-right\">\n              <button className=\"button button--lightblue\" onClick={this.onCrop}>{intl.messages['button.done']}</button>\n            </div>\n          </div>\n\n          <div className=\"modal-new__body\">\n            <div className=\"crop-wrapper\"\n                 ref=\"wrapper\"\n                 onTouchEnd={this.removeListeners}\n                 onMouseUp={this.removeListeners}>\n              <div className=\"crop-wrapper__scale\"\n                   style={{width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y}}>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--top\"\n                     onMouseDown={this.onStartResizeTop}\n                     onTouchStart={this.onStartResizeTop}/>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--right\"\n                     onMouseDown={this.onStartResizeRight}\n                     onTouchStart={this.onStartResizeRight}/>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--bottom\"\n                     onMouseDown={this.onStartResizeBottom}\n                     onTouchStart={this.onStartResizeBottom}/>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--left\"\n                     onMouseDown={this.onStartResizeLeft}\n                     onTouchStart={this.onStartResizeLeft}/>\n              </div>\n              <div className=\"crop-wrapper__overlay\"\n                   onMouseDown={this.onStartMoving}\n                   onTouchStart={this.onStartMoving}\n                   style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y}}>\n                <img className=\"crop-wrapper__image-crop\"\n                     draggable=\"false\"\n                     ref=\"cropImage\"\n                     src={pictureSource}\n                     style={{left: -cropPosition.x, top: -cropPosition.y, width: scaledWidth, height: scaledHeight}}/>\n              </div>\n              <img className=\"crop-wrapper__image-original\"\n                   draggable=\"false\"\n                   ref=\"originalImage\"\n                   src={pictureSource}\n                   style={{maxHeight: maxImageHeight}}/>\n            </div>\n          </div>\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(CropAvatarModal);\n"]}