{"version":3,"sources":["../../../../src/components/modals/PeopleList/PeopleList.react.js"],"names":[],"mappings":"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","file":"PeopleList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { map, debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport history from '../../../utils/history';\nimport PeerUtils from '../../../utils/PeerUtils';\nimport Scrollbar from '../../common/Scrollbar.react';\n\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\n\nimport ContactActionCreators from '../../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../../actions/DialogActionCreators';\n\nimport PeopleStore from '../../../stores/PeopleStore';\n\nimport People from './PeopleItem.react';\n\nclass PeopleList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores = () => [PeopleStore];\n\n  static calculateState() {\n    return {\n      list: PeopleStore.getList(),\n      results: PeopleStore.getResults(),\n      selectedIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setFocus();\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  setFocus = () => findDOMNode(this.refs.search).focus();\n\n  handleClose = () => ContactActionCreators.close();\n\n  handleSearchChange = (event) => {\n    const query = event.target.value;\n    this.setState({query});\n    this.searchPeople(query)\n  };\n\n  searchPeople = debounce((query) => ContactActionCreators.search(query), 300, {trailing: true});\n\n  handleContactSelect = (contact) => {\n    DialogActionCreators.selectDialogPeerUser(contact.uid);\n    this.handleClose()\n  };\n\n  handleKeyDown = (event) => {\n    const { results, selectedIndex } = this.state;\n    let index = selectedIndex;\n\n    const selectNext = () => {\n      if (index < results.length - 1) {\n        index += 1;\n      } else if (index === results.length - 1) {\n        index = 0;\n      }\n\n      this.setState({selectedIndex: index});\n\n      const scrollContainerNode = findDOMNode(this.refs.results).getElementsByClassName('ss-scrollarea')[0];\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if ((scrollContainerNodeRect.top + scrollContainerNodeRect.height) < (selectedNodeRect.top + selectedNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollTop + (selectedNodeRect.top + selectedNodeRect.height) - (scrollContainerNodeRect.top + scrollContainerNodeRect.height));\n      } else if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(0);\n      }\n    };\n    const selectPrev = () => {\n      if (index > 0) {\n        index -= 1;\n      } else if (index === 0) {\n        index = results.length - 1;\n      }\n\n      this.setState({selectedIndex: index});\n\n      const scrollContainerNode = findDOMNode(this.refs.results).getElementsByClassName('ss-scrollarea')[0];\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(scrollContainerNode.scrollTop + selectedNodeRect.top - scrollContainerNodeRect.top);\n      } else if (selectedNodeRect.top > (scrollContainerNodeRect.top + scrollContainerNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollHeight);\n      }\n    };\n\n    switch (event.keyCode) {\n      case KeyCodes.ENTER:\n        event.stopPropagation();\n        event.preventDefault();\n        this.handleContactSelect(results[selectedIndex]);\n        break;\n\n      case KeyCodes.ARROW_UP:\n        event.stopPropagation();\n        event.preventDefault();\n        selectPrev();\n        break;\n      case KeyCodes.ARROW_DOWN:\n        event.stopPropagation();\n        event.preventDefault();\n        selectNext();\n        break;\n      case KeyCodes.TAB:\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.shiftKey) {\n          selectPrev();\n        } else {\n          selectNext();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleScroll = (top) => this.refs.results.scrollTo(top);\n\n  render() {\n    const { query, results, selectedIndex, list } = this.state;\n    const { intl } = this.context;\n\n    const peopleList = map(results, (result, index) => <People contact={result} key={index}\n                                                               onClick={this.handleContactSelect}\n                                                               isSelected={selectedIndex === index}\n                                                               ref={selectedIndex === index ? 'selected' : null}\n                                                               onMouseOver={() => this.setState({selectedIndex: index})}/>);\n\n    return (\n      <div className=\"newmodal newmodal__contacts\">\n        <header className=\"newmodal__header\">\n          <h2>{intl.messages['modal.contacts.title']}</h2>\n        </header>\n\n        <section className=\"newmodal__search\">\n          <input className=\"newmodal__search__input\"\n                 onChange={this.handleSearchChange}\n                 placeholder={intl.messages['modal.contacts.search']}\n                 type=\"search\"\n                 ref=\"search\"\n                 value={query}/>\n        </section>\n\n        <Scrollbar ref=\"results\">\n          <ul className=\"newmodal__result contacts__list\">\n            {\n              list.length === 0\n                ? <div>{intl.messages['modal.contacts.loading']}</div>\n                : results.length === 0\n                ? <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n                    {intl.messages['modal.contacts.notFound']}\n                  </li>\n                : peopleList\n            }\n          </ul>\n        </Scrollbar>\n      </div>\n    )\n  }\n}\n\nexport default Container.create(PeopleList, {pure: false});\n"]}