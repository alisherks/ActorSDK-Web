{"version":3,"sources":["../../../src/components/modals/ModalsWrapper.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEM;;;AACJ,WADI,aACJ,CAAY,KAAZ,EAAmB;0BADf,eACe;;iDACjB,sBAAM,KAAN,GADiB;;UA0BnB,gBAAgB,UAAC,KAAD,EAAW;AACzB,cAAQ,MAAM,OAAN;AACN,aAAK,4BAAS,GAAT;AACH,gBAAM,cAAN,GADF;AAEE,gBAAK,WAAL,GAFF;AAGE,gBAHF;AADF,aAKO,4BAAS,CAAT;AACH,cAAI,MAAM,OAAN,EAAe;AACjB,kBAAM,cAAN,GADiB;AAEjB,kBAAK,WAAL,GAFiB;AAGjB,8CAAwB,IAAxB,GAHiB;WAAnB;AAKA,gBANF;AALF,aAYO,4BAAS,CAAT;AACH,cAAI,MAAM,OAAN,EAAe;AACjB,kBAAM,cAAN,GADiB;AAEjB,kBAAK,WAAL,GAFiB;AAGjB,4CAAsB,IAAtB,GAHiB;WAAnB;AAKA,gBANF;AAZF;OADyB;KAAX,CA1BG;;UAkDnB,cAAc,YAAM;wBACsB,MAAK,KAAL,CADtB;UACV,0CADU;UACK,wCADL;;;AAGlB,UAAI,aAAJ,EAAmB;AACjB,wCAAsB,KAAtB,GADiB;OAAnB;AAGA,UAAI,YAAJ,EAAkB;AAChB,0CAAwB,KAAxB,GADgB;OAAlB;KANY,CAlDK;;;GAAnB;;AADI,gBAOG,2CAAiB;AACtB,WAAO;AACL,qBAAe,sBAAa,MAAb,EAAf;AACA,oBAAc,yBAAe,MAAf,EAAd;KAFF,CADsB;;;AAPpB,0BAkBJ,mDAAqB;AACnB,aAAS,gBAAT,CAA0B,SAA1B,EAAqC,KAAK,aAAL,EAAoB,KAAzD,EADmB;;;AAlBjB,0BAuBJ,uDAAuB;AACrB,aAAS,mBAAT,CAA6B,SAA7B,EAAwC,KAAK,aAAL,EAAoB,KAA5D,EADqB;;;AAvBnB,0BA8DJ,2BAAS;iBACiC,KAAK,KAAL,CADjC;QACC,qCADD;QACgB,mCADhB;QAEC,OAAS,KAAK,OAAL,CAAT,KAFD;;;AAIP,QAAM,mBAAmB,0BAAW,eAAX,EAA4B;AACnD,+BAAyB,iBAAiB,YAAjB;KADF,CAAnB,CAJC;;AAQP,WACE;;QAAK,WAAW,gBAAX,EAAL;MACE;;UAAK,WAAU,sBAAV,EAAiC,SAAS,KAAK,WAAL,EAA/C;QACE;;YAAG,WAAU,2BAAV,EAAH;;SADF;QAEE;;YAAK,WAAU,MAAV,EAAL;UAAuB,KAAK,QAAL,CAAc,cAAd,CAAvB;SAFF;OADF;MAMG,gBAAgB,yDAAhB,GAAgC,IAAhC;MACA,eAAe,wDAAf,GAA8B,IAA9B;KARL,CARO;;;SA9DL;;;cAKG,YAAY;SAAM;CAAN;;AALf,cAcG,eAAe;AACpB,QAAM,iBAAU,MAAV;;kBAqEK,iBAAU,MAAV,CAAiB,aAAjB,EAAgC,EAAE,MAAM,KAAN,EAAlC","file":"ModalsWrapper.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport GroupListActionCreators from '../../actions/GroupListActionCreators';\n\nimport ContactStore from '../../stores/PeopleStore';\nimport GroupListStore from '../../stores/GroupListStore';\n\nimport PeopleList from './PeopleList'\nimport GroupList from './GroupList'\n\nclass ModalsWrapper extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [ContactStore, GroupListStore];\n\n  static calculateState() {\n    return {\n      isPeoplesOpen: ContactStore.isOpen(),\n      isGroupsOpen: GroupListStore.isOpen()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case KeyCodes.ESC:\n        event.preventDefault();\n        this.handleClose();\n        break;\n      case KeyCodes.G:\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.handleClose();\n          GroupListActionCreators.open();\n        }\n        break;\n      case KeyCodes.P:\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.handleClose();\n          ContactActionCreators.open();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleClose = () => {\n    const { isPeoplesOpen, isGroupsOpen } = this.state;\n\n    if (isPeoplesOpen) {\n      ContactActionCreators.close();\n    }\n    if (isGroupsOpen) {\n      GroupListActionCreators.close();\n    }\n  };\n\n  render() {\n    const { isPeoplesOpen, isGroupsOpen } = this.state;\n    const { intl } = this.context;\n\n    const wrapperClassName = classnames('modal-wrapper', {\n      'modal-wrapper--opened': isPeoplesOpen || isGroupsOpen\n    });\n\n    return (\n      <div className={wrapperClassName}>\n        <div className=\"modal-wrapper__close\" onClick={this.handleClose}>\n          <i className=\"close_icon material-icons\">close</i>\n          <div className=\"text\">{intl.messages['button.close']}</div>\n        </div>\n\n        {isPeoplesOpen ? <PeopleList/> : null}\n        {isGroupsOpen ? <GroupList/> : null}\n      </div>\n    );\n  }\n}\n\nexport default Container.create(ModalsWrapper, { pure: false });\n"]}