{"version":3,"sources":["../../../src/components/modals/CallModal.react.js"],"names":[],"mappings":"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","file":"CallModal.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\n import { FormattedMessage } from 'react-intl';\nimport AvatarItem from '../common/AvatarItem.react';\n\nimport { KeyCodes, CallStates } from '../../constants/ActorAppConstants';\n\nimport CallActionCreators from '../../actions/CallActionCreators';\n\nimport CallStore from '../../stores/CallStore';\nimport UserStore from '../../stores/UserStore';\n\nclass CallModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [CallStore];\n\n  static calculateState() {\n    return {\n      isOpen: CallStore.isOpen(),\n      isOutgoing: CallStore.isOutgoing(),\n      callId: CallStore.getId(),\n      callMembers: CallStore.getMembers(),\n      callPeer: CallStore.getPeer(),\n      callState: CallStore.getState()\n    };\n  }\n\n  handleClose = () => CallActionCreators.hide();\n\n  onKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleAnswer = () => {\n    const { callId } = this.state;\n    CallActionCreators.answerCall(callId);\n  };\n\n  handleEnd = () => {\n    const { callId } = this.state;\n    CallActionCreators.endCall(callId);\n    //this.handleClose();\n  };\n\n  handleMute = () => {\n    console.debug('handleMute');\n  };\n\n  render() {\n    const { isOpen, isOutgoing, callPeer, callMembers, callState } = this.state;\n    const peerInfo = callPeer ? ( callPeer.type == 'user' ? UserStore.getUser(callPeer.id) : null) : null;\n\n    const modalStyles = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 240,\n        minWidth: 240\n      }\n    };\n\n    const modalBody = peerInfo ? (\n      <div>\n        <AvatarItem image={peerInfo.avatar} placeholder={peerInfo.placeholder}\n                    size=\"big\" title={peerInfo.name}/>\n        <h4 className=\"caller-name\">{peerInfo.name}</h4>\n      </div>\n    ) : null;\n\n    let modalFooter;\n    switch (callState) {\n      case CallStates.CALLING:\n        modalFooter = (\n          <div>\n            {\n              isOutgoing\n                ? null\n                : <button className=\"button button--rised button--wide\" onClick={this.handleAnswer}>\n                    <FormattedMessage id=\"call.answer\"/>\n                  </button>\n            }\n            <button className=\"button button--rised button--wide\" onClick={this.handleEnd}>\n              {\n                isOutgoing\n                  ? <FormattedMessage id=\"button.cancel\"/>\n                  : <FormattedMessage id=\"call.decline\"/>\n              }\n            </button>\n          </div>\n        );\n        break;\n      case CallStates.IN_PROGRESS:\n      case CallStates.CONNECTING:\n        modalFooter = (\n          <div>\n            <button className=\"button button--rised button--wide\" onClick={this.handleMute}>\n              <FormattedMessage id=\"call.mute\"/>\n            </button>\n            <button className=\"button button--rised button--wide\" onClick={this.handleEnd}>\n              <FormattedMessage id=\"call.end\"/>\n            </button>\n          </div>\n        );\n        break;\n      case CallStates.ENDED:\n        modalFooter = (\n          <div>\n            <button className=\"button button--rised button--wide\" onClick={this.handleClose}>\n              <FormattedMessage id=\"button.close\"/>\n            </button>\n          </div>\n        );\n        break;\n      default:\n    }\n\n    if (isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--call\"\n               closeTimeoutMS={150}\n               style={modalStyles}\n               isOpen={isOpen}>\n\n          <div className=\"modal-new__header\">\n            <h3 className=\"modal-new__header__title\">\n              {\n                isOutgoing\n                  ? <FormattedMessage id=\"call.outgoing\"/>\n                  : <FormattedMessage id=\"call.incoming\"/>\n              }\n            </h3>\n          </div>\n\n          <div className=\"modal-new__body\">\n            {/* <small>STATE: {callState}</small> */}\n            {modalBody}\n          </div>\n\n          <div className=\"modal-new__footer\">\n            {modalFooter}\n          </div>\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(CallModal, {pure: false});\n"]}