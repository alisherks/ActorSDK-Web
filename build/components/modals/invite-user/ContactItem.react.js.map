{"version":3,"sources":["../../../../src/components/modals/invite-user/ContactItem.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;AAEA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA,IAAM,oBAAoB,SAApB,iBAAoB,CAAC,KAAD,EAAW;MAC3B,UAAY,MAAZ,QAD2B;;;AAGnC,SAAO;AACL,qBAAiB,0BAAgB,kBAAhB,CAAmC,QAAQ,GAAR,CAApD;GADF,CAHmC;CAAX;;IAQpB;;;AAOJ,WAPI,WAOJ,CAAY,KAAZ,EAAmB;0BAPf,aAOe;;iDACjB,sBAAM,KAAN,GADiB;;UAWnB,WAAW,YAAM;wBACe,MAAK,KAAL,CADf;UACP,8BADO;UACE,gCADF;;;AAGf,gCAAgB,iBAAhB,CAAkC,MAAK,QAAL,CAAlC,CAHe;AAIf,eAAS,OAAT,EAJe;KAAN,CAXQ;;UAkBnB,WAAW,YAAM;AACf,YAAK,QAAL,CAAc,kBAAkB,MAAK,KAAL,CAAhC,EADe;;AAGf,iBAAW,YAAM;YACP,kBAAoB,MAAK,KAAL,CAApB,gBADO;;AAEf,YAAI,oBAAoB,qCAAkB,OAAlB,IAA6B,oBAAoB,qCAAkB,OAAlB,EAA2B;AAClG,oCAAgB,oBAAhB,CAAqC,MAAK,QAAL,CAArC,CADkG;SAApG;OAFS,EAKR,CALH,EAHe;KAAN,CAlBQ;;AAGjB,UAAK,KAAL,GAAa,kBAAkB,KAAlB,CAAb,CAHiB;;GAAnB;;AAPI,wBAaJ,uDAAuB;QACb,UAAY,KAAK,KAAL,CAAZ,QADa;;AAErB,8BAAgB,oBAAhB,CAAqC,QAAQ,GAAR,CAArC,CAFqB;;;AAbnB,wBAoCJ,2BAAS;iBACuB,KAAK,KAAL,CADvB;QACC,yBADD;QACU,2BADV;QAEC,kBAAoB,KAAK,KAAL,CAApB,gBAFD;;;AAIP,QAAM,mBAAmB,0BAAW,0BAAX,EAAuC;AAC9D,sCAAgC,QAAhC;KADuB,CAAnB,CAJC;;AAQP,QAAM,WAAW,WACb;;QAAG,WAAU,gBAAV,EAAH;;KADa,GAEb;yBAAU,IAAV;QAAe,cAAc,eAAd,EAAf;MACE;2BAAU,OAAV;;QACE;;YAAG,WAAU,gBAAV,EAA2B,SAAS,KAAK,QAAL,EAAvC;;SADF;OADF;MAIE;2BAAU,UAAV;;QACE;;YAAG,WAAU,qBAAV,EAAH;;SADF;OAJF;MAOE;2BAAU,OAAV;;QACE;;YAAG,WAAU,gBAAV,EAAH;;SADF;OAPF;MAUE;2BAAU,OAAV;;QACE;;YAAG,WAAU,gBAAV,EAAH;;SADF;OAVF;KAFa,CARV;;AAyBP,WACE;;QAAI,WAAW,gBAAX,EAAJ;MACE,sDAAY,OAAO,QAAQ,MAAR;AACP,qBAAa,QAAQ,WAAR;AACb,cAAK,OAAL;AACA,eAAO,QAAQ,IAAR,EAHnB,CADF;MAME;;UAAK,WAAU,QAAV,EAAL;QACE,wCAAM,WAAU,OAAV,EAAkB,yBAAyB,EAAC,QAAQ,iCAAgB,QAAQ,IAAR,CAAxB,EAA1B,EAAxB,CADF;OANF;MAUE;;UAAK,WAAU,UAAV,EAAL;QACG,QADH;OAVF;KADF,CAzBO;;;SApCL;;;YACG,YAAY;AACjB,WAAS,iBAAU,MAAV;AACT,YAAU,iBAAU,IAAV;AACV,YAAU,iBAAU,IAAV;;;;AA4Ed,qBAAW,OAAX,CAAmB,WAAnB;;kBAEe","file":"ContactItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport ReactMixin from 'react-mixin';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport InviteUserStore from '../../../stores/InviteUserStore';\n\nimport { AsyncActionStates } from '../../../constants/ActorAppConstants';\n\nimport AvatarItem from '../../common/AvatarItem.react';\nimport Stateful from '../../common/Stateful';\n\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\n\nconst getStateFromStore = (props) => {\n  const { contact } = props;\n\n  return {\n    inviteUserState: InviteUserStore.getInviteUserState(contact.uid)\n  }\n};\n\nclass ContactItem extends Component {\n  static propTypes = {\n    contact: PropTypes.object,\n    onSelect: PropTypes.func,\n    isMember: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = getStateFromStore(props);\n  }\n\n  componentWillUnmount() {\n    const { contact } = this.props;\n    InviteUserStore.resetInviteUserState(contact.uid);\n  }\n\n  onSelect = () => {\n    const { contact, onSelect } = this.props;\n\n    InviteUserStore.addChangeListener(this.onChange);\n    onSelect(contact);\n  };\n\n  onChange = () => {\n    this.setState(getStateFromStore(this.props));\n\n    setTimeout(() => {\n      const { inviteUserState } = this.state;\n      if (inviteUserState === AsyncActionStates.SUCCESS || inviteUserState === AsyncActionStates.FAILURE) {\n        InviteUserStore.removeChangeListener(this.onChange);\n      }\n    }, 0);\n  };\n\n  render() {\n    const { contact, isMember } = this.props;\n    const { inviteUserState } = this.state;\n\n    const contactClassName = classnames('contacts__list__item row', {\n      'contacts__list__item--member': isMember\n    });\n\n    const controls = isMember\n      ? <i className=\"material-icons\">check</i>\n      : <Stateful.Root currentState={inviteUserState}>\n          <Stateful.Pending>\n            <a className=\"material-icons\" onClick={this.onSelect}>person_add</a>\n          </Stateful.Pending>\n          <Stateful.Processing>\n            <i className=\"material-icons spin\">autorenew</i>\n          </Stateful.Processing>\n          <Stateful.Success>\n            <i className=\"material-icons\">check</i>\n          </Stateful.Success>\n          <Stateful.Failure>\n            <i className=\"material-icons\">warning</i>\n          </Stateful.Failure>\n        </Stateful.Root>;\n\n    return (\n      <li className={contactClassName}>\n        <AvatarItem image={contact.avatar}\n                    placeholder={contact.placeholder}\n                    size=\"small\"\n                    title={contact.name}/>\n\n        <div className=\"col-xs\">\n          <span className=\"title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(contact.name)}}/>\n        </div>\n\n        <div className=\"controls\">\n          {controls}\n        </div>\n      </li>\n    );\n  }\n}\n\nReactMixin.onClass(ContactItem, PureRenderMixin);\n\nexport default ContactItem;\n"]}