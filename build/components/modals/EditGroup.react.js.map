{"version":3,"sources":["../../../src/components/modals/EditGroup.react.js"],"names":[],"mappings":"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","file":"EditGroup.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport EditGroupStore from '../../stores/EditGroupStore';\nimport CropAvatarStore from '../../stores/CropAvatarStore';\n\nimport EditGroupActionCreators from '../../actions/EditGroupActionCreators';\nimport CropAvatarActionCreators from '../../actions/CropAvatarActionCreators';\n\nimport TextField from '../common/TextField.react';\nimport AvatarItem from '../common/AvatarItem.react';\nimport CropAvatarModal from './CropAvatar.react';\n\nclass EditGroup extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores = () => [EditGroupStore, CropAvatarStore];\n\n  static calculateState() {\n    return {\n      isOpen: EditGroupStore.isOpen(),\n      group: EditGroupStore.getGroup(),\n      isAdmin: EditGroupStore.isAdmin(),\n      title: EditGroupStore.getTitle(),\n      about: EditGroupStore.getAbout(),\n      isCropModalOpen: CropAvatarStore.isOpen()\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState.isOpen) {\n      nextState.isCropModalOpen ? this.removeListeners() : this.setListeners();\n    } else {\n      nextState.isCropModalOpen ? this.setListeners() : this.removeListeners();\n    }\n  }\n\n  setListeners = () => document.addEventListener('keydown', this.onKeyDown, false);\n  removeListeners = () => document.removeEventListener('keydown', this.onKeyDown, false);\n\n  onClose = () => EditGroupActionCreators.hide();\n  onTitleChange = event => this.setState({title: event.target.value});\n  onAboutChange = event => this.setState({about: event.target.value});\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  onSave = () => {\n    const { group, title, about, isAdmin } = this.state;\n    EditGroupActionCreators.editGroupTitle(group.id, title);\n    if (isAdmin) {\n      EditGroupActionCreators.editGroupAbout(group.id, about);\n    }\n    this.onClose();\n  };\n\n  onProfilePictureInputChange = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    const imageForm = findDOMNode(this.refs.imageForm);\n    const file = imageInput.files[0];\n\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      CropAvatarActionCreators.show(event.target.result);\n      imageForm.reset();\n    };\n    reader.readAsDataURL(file);\n  };\n\n  onChangeAvatarClick = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    imageInput.click()\n  };\n\n  changeGroupAvatar = (croppedImage) => {\n    const { group } = this.state;\n    EditGroupActionCreators.changeGroupAvatar(group.id, croppedImage);\n  };\n\n  onProfilePictureRemove = () =>  {\n    const { group } = this.state;\n    EditGroupActionCreators.removeGroupAvatar(group.id);\n  };\n\n  render() {\n    const { isOpen, group, isCropModalOpen, title, about, isAdmin } = this.state;\n    const { intl } = this.context;\n\n    const cropAvatar = isCropModalOpen ? <CropAvatarModal onCropFinish={this.changeGroupAvatar}/> : null;\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 440\n      }\n    };\n\n    if (isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--edit-group\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={modalStyle}>\n\n          <header className=\"modal-new__header\">\n            <a className=\"modal-new__header__icon material-icons\">edit</a>\n            <h3 className=\"modal-new__header__title\">{intl.messages['modal.group.title']}</h3>\n            <div className=\"pull-right\">\n              <button className=\"button button--lightblue\" onClick={this.onSave}>{intl.messages['button.done']}</button>\n            </div>\n          </header>\n\n          <div className=\"modal-new__body row\">\n            <div className=\"col-xs\">\n              <TextField className=\"input__material--wide\"\n                         floatingLabel={intl.messages['modal.group.name']}\n                         onChange={this.onTitleChange}\n                         ref=\"name\"\n                         value={title}/>\n\n              {\n                isAdmin\n                  ? <div className=\"about\">\n                      <label htmlFor=\"about\">{intl.messages['modal.group.about']}</label>\n                      <textarea className=\"textarea\" value={about} onChange={this.onAboutChange} id=\"about\"/>\n                    </div>\n                  : null\n              }\n            </div>\n            <div className=\"profile-picture text-center\">\n              <div className=\"profile-picture__changer\">\n                <AvatarItem image={group.bigAvatar}\n                            placeholder={group.placeholder}\n                            size=\"big\"\n                            title={group.name}/>\n                <a onClick={this.onChangeAvatarClick}>\n                  <span>{intl.messages['modal.group.avatarChange']}</span>\n                </a>\n              </div>\n              <div className=\"profile-picture__controls\">\n                <a onClick={this.onProfilePictureRemove}>{intl.messages['modal.group.avatarRemove']}</a>\n              </div>\n              <form className=\"hide\" ref=\"imageForm\">\n                <input onChange={this.onProfilePictureInputChange} ref=\"imageInput\" type=\"file\"/>\n              </form>\n            </div>\n          </div>\n\n          {cropAvatar}\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(EditGroup, {pure: false});\n"]}