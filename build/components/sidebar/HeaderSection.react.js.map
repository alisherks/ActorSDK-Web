{"version":3,"sources":["../../../src/components/sidebar/HeaderSection.react.js"],"names":[],"mappings":"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","file":"HeaderSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport ActorClient from '../../utils/ActorClient';\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\nimport confirm from '../../utils/confirm'\nimport SharedContainer from '../../utils/SharedContainer';\nimport { twitter, homePage } from '../../constants/ActorAppConstants';\n\nimport MyProfileActions from '../../actions/MyProfileActionCreators';\nimport CreateGroupActionCreators from '../../actions/CreateGroupActionCreators';\nimport LoginActionCreators from '../../actions/LoginActionCreators';\nimport HelpActionCreators from '../../actions/HelpActionCreators';\nimport AddContactActionCreators from '../../actions/AddContactActionCreators';\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\n\nimport MyProfileStore from '../../stores/MyProfileStore';\nimport CreateGroupStore from '../../stores/CreateGroupStore';\nimport AddContactStore from '../../stores/AddContactStore';\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport CreateGroupModal from '../modals/CreateGroup';\nimport MyProfileModal from '../modals/MyProfile.react';\nimport AddContactModal from '../modals/AddContact.react';\nimport PreferencesModal from '../modals/Preferences.react';\n\nclass HeaderSection extends Component {\n  constructor(props) {\n    super(props);\n\n    const SharedActor = SharedContainer.get();\n    this.twitter = SharedActor.twitter ? SharedActor.twitter : twitter;\n    this.homePage = SharedActor.homePage ? SharedActor.homePage : homePage;\n  }\n\n  static getStores = () => [MyProfileStore, CreateGroupStore, AddContactStore, PreferencesStore];\n\n  static calculateState() {\n    return {\n      profile: MyProfileStore.getProfile(),\n      isMyProfileOpen: MyProfileStore.isModalOpen(),\n      isAddContactsOpen: AddContactStore.isOpen(),\n      isCreateGroupOpen: CreateGroupStore.isModalOpen(),\n      isPreferencesOpen: PreferencesStore.isOpen()\n    }\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    this.setState({isOpened: false});\n  }\n\n  toggleHeaderMenu = () => {\n    const { isOpened } = this.state;\n\n    if (!isOpened) {\n      this.setState({isOpened: true});\n      document.addEventListener('click', this.closeHeaderMenu, false);\n    } else {\n      this.closeHeaderMenu();\n    }\n  };\n\n  closeHeaderMenu = () => {\n    this.setState({isOpened: false});\n    document.removeEventListener('click', this.closeHeaderMenu, false);\n  };\n\n  openMyProfile = () => MyProfileActions.show();\n  openCreateGroup = () => CreateGroupActionCreators.open();\n  openHelpDialog = () => HelpActionCreators.open();\n  openAddContactModal = () => AddContactActionCreators.open();\n  onSettingsOpen = () => PreferencesActionCreators.show();\n  openTwitter = (event) => {\n    event.preventDefault();\n    if (ActorClient.isElectron()) {\n      ActorClient.handleLinkClick(event);\n    } else {\n      window.open(`https://twitter.com/${this.twitter}`, '_blank');\n    }\n  };\n  openHomePage = (event) => {\n    event.preventDefault();\n    if (ActorClient.isElectron()) {\n      ActorClient.handleLinkClick(event);\n    } else {\n      window.open(this.homePage, '_blank');\n    }\n  };\n  setLogout = () => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.logout'], {\n      abortLabel: intl.messages['button.cancel'],\n      confirmLabel: intl.messages['button.ok']\n    }).then(\n      () => LoginActionCreators.setLoggedOut(),\n      () => {}\n    );\n  };\n\n  render() {\n    const { profile, isOpened, isMyProfileOpen, isCreateGroupOpen, isAddContactsOpen, isPreferencesOpen } = this.state;\n    const { intl } = this.context;\n\n    if (profile) {\n      const headerClass = classnames('sidebar__header', 'sidebar__header--clickable', {\n        'sidebar__header--opened': isOpened\n      });\n      const menuClass = classnames('dropdown', {\n        'dropdown--opened': isOpened\n      });\n\n      return (\n        <header className={headerClass}>\n          <div className=\"sidebar__header__user row\" onClick={this.toggleHeaderMenu}>\n            <AvatarItem image={profile.avatar}\n                        placeholder={profile.placeholder}\n                        size=\"tiny\"\n                        title={profile.name} />\n            <span className=\"sidebar__header__user__name col-xs\"\n                  dangerouslySetInnerHTML={{__html: escapeWithEmoji(profile.name)}}/>\n            <div className={menuClass}>\n              <span className=\"dropdown__button\">\n                <i className=\"material-icons\">arrow_drop_down</i>\n              </span>\n              <ul className=\"dropdown__menu dropdown__menu--right\">\n                <li className=\"dropdown__menu__item\" onClick={this.openMyProfile}>\n                  <i className=\"material-icons\">edit</i>\n                  {intl.messages['menu.editProfile']}\n                </li>\n                <li className=\"dropdown__menu__item\" onClick={this.openAddContactModal}>\n                  <i className=\"material-icons\">person_add</i>\n                  {intl.messages['menu.addToContacts']}\n                </li>\n                <li className=\"dropdown__menu__item\" onClick={this.openCreateGroup}>\n                  <i className=\"material-icons\">group_add</i>\n                  {intl.messages['menu.createGroup']}\n                </li>\n                <li className=\"dropdown__menu__separator\"/>\n                <li className=\"dropdown__menu__item\" onClick={this.onSettingsOpen}>\n                  <i className=\"material-icons\">settings</i>\n                  {intl.messages['menu.preferences']}\n                </li>\n                <li className=\"dropdown__menu__item\" onClick={this.openHelpDialog}>\n                  <i className=\"material-icons\">help</i>\n                  {intl.messages['menu.helpAndFeedback']}\n                </li>\n                <li className=\"dropdown__menu__item\">\n                  <a href={`https://twitter.com/${this.twitter}`} onClick={this.openTwitter}>\n                    <svg className=\"icon icon--dropdown\"\n                         style={{marginLeft: -34}}\n                         dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#twitter\"/>'}}/>\n                    {intl.messages['menu.twitter']}\n                  </a>\n                </li>\n                <li className=\"dropdown__menu__item\">\n                  <a href={this.homePage} onClick={this.openHomePage}>\n                    <i className=\"material-icons\">public</i>\n                    {intl.messages['menu.homePage']}\n                  </a>\n                </li>\n                <li className=\"dropdown__menu__separator\"/>\n                <li className=\"dropdown__menu__item\" onClick={this.setLogout}>\n                  {intl.messages['menu.signOut']}\n                </li>\n              </ul>\n            </div>\n          </div>\n\n\n          {/* Modals */}\n          {isMyProfileOpen ? <MyProfileModal/> : null}\n          {isCreateGroupOpen ? <CreateGroupModal/> : null}\n          {isAddContactsOpen ? <AddContactModal/> : null}\n          {isPreferencesOpen ? <PreferencesModal/> : null}\n\n        </header>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(HeaderSection);\n"]}